var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.72,1,0.939]],["body/components/AppComponent.html",[0,1.166,1,1.616,2,2.016,3,0.593,4,0.505,5,1.761,6,1.761,7,1.761,8,1.761,9,0.347,10,2.433,11,1.761,12,2.936,13,2.236,14,2.696,15,2.318,16,4.438,17,2.318,18,3.97,19,0.792,20,2.696,21,3.579,22,1.972,23,1.193,24,3.97,25,0.907,26,0.051,27,2.048,28,1.761,29,1.761,30,3.202,31,0.665,32,0.593,33,1.034,34,2.433,35,0.593,36,0.276,37,2.048,38,1.732,39,3.97,40,1.177,41,2.016,42,2.016,43,1.761,44,2.753,45,1.761,46,1.193,47,1.761,48,0.907,49,1.764,50,1.761,51,0.907,52,1.761,53,1.034,54,1.341,55,1.761,56,1.761,57,1.761,58,0.028,59,0.036,60,0.028]],["title/modules/AppModule.html",[61,1.069,62,1.6]],["body/modules/AppModule.html",[1,1.852,3,0.603,4,0.513,9,0.353,13,1.362,26,0.051,31,0.846,32,0.603,33,1.732,34,2.472,35,0.603,36,0.28,40,1.196,58,0.028,59,0.037,60,0.028,61,1.196,62,3.134,63,1.196,64,1.556,65,3.037,66,3.037,67,3.037,68,1.556,69,2.472,70,2.472,71,2.472,72,2.472,73,2.472,74,2.565,75,2.724,76,2.081,77,1.789,78,3.065,79,2.342,80,4.012,81,2.472,82,1.556,83,2.342,84,2.472,85,3.065,86,4.012,87,1.789]],["title/classes/AppPage.html",[36,0.25,88,1.861]],["body/classes/AppPage.html",[3,0.725,4,0.617,9,0.424,14,2.504,19,0.969,23,1.356,26,0.051,31,0.617,35,0.725,36,0.337,42,1.872,58,0.034,59,0.041,60,0.034,82,1.872,88,3.063,89,3.688,90,2.974,91,2.005,92,5.077,93,5.077,94,3.688,95,2.005,96,3.688,97,3.688,98,2.29,99,3.688,100,3.638,101,3.688,102,3.688]],["title/modules/AppRoutingModule.html",[61,1.069,74,1.392]],["body/modules/AppRoutingModule.html",[3,0.735,4,0.626,9,0.43,26,0.051,31,0.761,32,0.735,35,0.735,36,0.341,38,1.458,58,0.034,59,0.042,60,0.034,63,1.458,68,1.897,74,2.308,79,2.181,83,2.654,103,3.736,104,3.013,105,2.861,106,3.667,107,1.458,108,2.537,109,3.736,110,3.736,111,3.736,112,3.013,113,3.736]],["title/injectables/GithubApiService.html",[33,0.939,114,1.218]],["body/injectables/GithubApiService.html",[3,0.563,4,0.48,9,0.33,14,1.946,19,0.753,22,1.273,23,1.3,25,1.3,26,0.052,27,3.538,31,0.774,32,0.563,33,1.315,35,0.563,36,0.262,46,1.3,58,0.026,59,0.035,60,0.026,87,1.673,91,1.705,95,1.705,98,2.196,114,1.705,115,2.866,116,3.726,117,2.311,118,2.203,119,3.837,120,3.837,121,2.866,122,4.621,123,2.866,124,2.196,125,2.196,126,3.837,127,3.837,128,4.817,129,2.866,130,4.326,131,2.866,132,3.271,133,3.837,134,2.866,135,3.094,136,1.273,137,1.273,138,2.866,139,2.866,140,1.455,141,2.866,142,2.866,143,3.837]],["title/components/RepoDetailComponent.html",[0,0.72,48,0.824]],["body/components/RepoDetailComponent.html",[0,0.976,1,0.741,2,1.599,3,0.425,4,0.362,5,1.262,6,1.262,7,1.262,8,1.262,9,0.249,11,1.262,12,2.646,13,2.014,15,1.839,17,1.839,19,0.568,20,2.139,22,0.96,23,1.362,25,1.228,26,0.051,28,1.262,29,1.262,31,0.727,32,0.425,35,0.425,36,0.198,38,0.843,40,0.843,41,1.599,42,1.599,43,1.262,44,2.384,45,1.262,46,1.362,47,1.262,48,1.228,49,2.237,50,1.262,51,0.65,52,1.262,53,0.741,54,0.96,55,1.262,56,1.262,57,1.262,58,0.02,59,0.029,60,0.02,91,1.4,95,1.652,107,0.843,118,2.303,124,1.599,125,1.599,136,0.96,137,2.208,140,1.097,144,3.177,145,1.743,146,1.839,147,2.997,148,2.997,149,2.54,150,2.54,151,3.15,152,3.717,153,3.15,154,2.384,155,2.997,156,3.294,157,3.294,158,3.15,159,1.743,160,3.655,161,2.997,162,3.294,163,3.15,164,2.161,165,3.655,166,2.161,167,3.15,168,2.161,169,3.15,170,2.161,171,2.997,172,1.743,173,1.743,174,1.262,175,1.743,176,1.262,177,1.743,178,1.743,179,1.743,180,1.743,181,2.161,182,2.161,183,2.161,184,2.161,185,1.743,186,1.743,187,3.15]],["title/components/RepoListComponent.html",[0,0.72,51,0.824]],["body/components/RepoListComponent.html",[0,0.978,1,0.744,2,1.604,3,0.427,4,0.363,5,1.266,6,1.266,7,1.266,8,1.266,9,0.25,11,1.266,12,2.649,13,2.017,15,1.844,17,1.844,19,0.57,20,2.145,22,0.964,23,1.364,25,1.23,26,0.051,28,1.266,29,1.266,31,0.728,32,0.427,35,0.427,36,0.198,38,1.771,40,0.846,41,1.604,42,1.604,43,1.266,44,2.388,45,1.266,46,1.23,47,1.266,48,0.652,49,2.175,50,1.266,51,1.23,52,1.266,53,0.744,54,1.655,55,1.266,56,1.266,57,1.266,58,0.02,59,0.029,60,0.02,91,1.404,95,1.655,107,0.846,118,2.304,124,1.604,125,1.604,136,0.964,137,2.082,140,1.101,144,3.18,146,1.844,147,3.004,148,3.004,149,2.547,150,2.547,154,2.388,155,3.004,156,3.3,157,3.3,159,1.75,160,3.66,161,3.004,162,3.3,165,3.66,171,3.004,172,1.75,173,1.75,174,1.266,175,1.75,176,1.266,177,1.75,178,1.75,179,1.75,180,1.75,185,1.75,186,1.75,188,1.75,189,3.725,190,3.159,191,3.159,192,3.159,193,2.17,194,2.17,195,3.159,196,2.17,197,2.17,198,2.17,199,2.17,200,2.17,201,2.17]],["title/guards/RepoResolver.html",[202,1.861,203,1.392]],["body/guards/RepoResolver.html",[3,0.479,4,0.408,9,0.281,19,0.64,22,1.766,23,1.032,25,1.032,26,0.052,31,0.812,32,0.479,33,1.479,35,0.479,36,0.223,37,2.331,46,1.032,58,0.022,59,0.031,60,0.022,87,1.423,91,1.526,95,1.083,98,1.743,107,0.951,114,1.526,118,2.021,124,1.743,125,1.743,132,2.699,136,1.083,140,1.238,146,1.423,154,1.423,176,1.423,203,1.743,204,1.655,205,1.966,206,2.699,207,3.48,208,2.93,209,3.48,210,2.331,211,3.806,212,2.769,213,3.48,214,2.769,215,2.769,216,2.331,217,2.769,218,3.206,219,2.331,220,2.93,221,1.966,222,4.059,223,2.438,224,3.206,225,2.769,226,3.48,227,2.93,228,3.48,229,2.438,230,2.769,231,3.806,232,2.769,233,2.769,234,2.769,235,2.769,236,1.966,237,1.966,238,1.423,239,1.966,240,1.966,241,1.966,242,2.438,243,2.438,244,1.966,245,1.966,246,1.966]],["title/components/ReposListItemComponent.html",[0,0.72,53,0.939]],["body/components/ReposListItemComponent.html",[0,1.142,1,0.992,2,1.961,3,0.569,4,0.485,5,1.69,6,1.69,7,1.69,8,1.69,9,0.333,11,1.69,12,2.902,13,2.21,15,2.255,17,2.255,19,0.76,23,0.87,25,0.87,26,0.05,31,0.647,32,0.569,35,0.569,36,0.265,38,2.012,40,1.129,41,1.961,42,1.961,43,1.69,44,2.708,45,1.69,46,1.161,47,1.69,48,0.87,49,1.717,50,1.69,51,0.87,52,1.69,53,1.59,54,2.344,55,2.538,56,1.69,57,1.69,58,0.026,59,0.035,60,0.026,118,1.286,137,2.21,174,1.69,247,2.623,248,2.334,249,4.348,250,3.863,251,3.863,252,2.895,253,3.863,254,3.863,255,2.895,256,3.863,257,2.895,258,2.895,259,2.895,260,1.965,261,2.895]],["title/modules/ReposModule.html",[61,1.069,262,1.6]],["body/modules/ReposModule.html",[3,0.572,4,0.487,9,0.335,26,0.051,31,0.875,32,0.572,35,0.572,36,0.266,38,1.512,40,1.135,48,1.497,49,1.723,51,1.497,53,1.707,54,1.293,58,0.027,59,0.035,60,0.027,61,1.135,63,1.135,64,1.477,65,2.96,66,1.975,67,2.632,68,1.477,75,2.632,76,1.975,77,1.698,79,2.263,83,2.263,84,2.346,203,1.968,262,3.129,263,2.346,264,2.346,265,2.346,266,2.528,267,2.909,268,3.876,269,2.346,270,2.909,271,2.909,272,2.909,273,2.909,274,2.909,275,3.876,276,2.346,277,1.968,278,2.346,279,2.346,280,2.346,281,2.909,282,2.346]],["title/guards/ReposResolver.html",[202,1.861,277,1.392]],["body/guards/ReposResolver.html",[3,0.475,4,0.405,9,0.278,19,0.635,22,1.758,23,1.026,25,1.026,26,0.052,31,0.827,32,0.475,33,1.473,35,0.475,36,0.221,37,2.317,46,1.026,58,0.022,59,0.031,60,0.022,87,1.411,91,1.517,95,1.074,98,1.733,107,0.943,114,1.517,118,2.015,124,1.733,125,1.733,132,2.687,136,1.074,137,1.074,140,1.227,146,1.411,154,1.411,174,1.411,176,1.411,204,1.641,206,2.687,207,3.467,208,2.919,209,3.467,210,2.317,211,3.795,212,2.753,213,3.467,214,2.753,215,2.753,216,2.317,217,2.753,218,3.191,219,2.317,220,2.919,221,1.949,222,4.051,224,3.191,225,2.753,226,3.467,227,2.919,228,3.467,230,2.753,231,3.795,232,2.753,233,2.753,234,2.753,235,2.753,236,1.949,237,1.949,238,1.411,239,1.949,240,1.949,241,1.949,244,1.949,245,1.949,246,1.949,277,1.733,283,1.949,284,2.417,285,2.417,286,2.417]],["title/modules/ReposRoutingModule.html",[61,1.069,266,1.392]],["body/modules/ReposRoutingModule.html",[0,1.108,3,0.651,4,0.555,9,0.381,26,0.052,31,0.864,32,0.651,35,0.651,36,0.303,38,1.293,48,1.268,49,2.063,51,1.268,58,0.03,59,0.039,60,0.03,63,1.293,68,1.682,79,1.934,83,2.463,104,2.673,105,2.463,106,3.403,107,1.293,108,2.25,112,3.403,203,2.142,220,2.865,247,2.25,266,2.142,277,2.142,278,2.673,279,2.673,280,2.673,282,2.673,287,3.314,288,3.314,289,3.314]],["title/coverage.html",[290,3.003]],["body/coverage.html",[0,1.225,1,1.005,9,0.337,10,2.364,25,0.881,26,0.051,33,1.005,36,0.268,48,0.881,51,0.881,53,1.005,54,1.303,58,0.027,59,0.036,60,0.027,88,1.99,90,2.364,114,1.303,116,2.364,117,2.364,137,1.303,144,2.645,145,2.364,188,2.364,202,2.645,203,1.488,205,2.364,238,2.274,247,1.99,248,2.364,277,1.488,283,2.364,290,2.364,291,2.364,292,2.932,293,2.932,294,3.727,295,3.896,296,4.025,297,5.288,298,2.364,299,5.288,300,2.364,301,2.364,302,2.364,303,2.364,304,2.364,305,2.932,306,2.364,307,2.932,308,3.896,309,3.896,310,3.896,311,2.932,312,2.932,313,2.364,314,2.364,315,3.142,316,2.364,317,2.364,318,2.364,319,2.932,320,2.932]],["title/dependencies.html",[64,1.671,321,2.297]],["body/dependencies.html",[26,0.051,32,0.737,58,0.034,59,0.042,60,0.034,64,1.903,81,3.674,82,2.313,107,1.463,136,1.666,269,3.023,276,3.023,322,3.749,323,5.504,324,3.749,325,3.749,326,3.749,327,3.749,328,3.749,329,3.749,330,3.749,331,3.749,332,3.749]],["title/index.html",[19,0.603,333,1.56,334,1.853]],["body/index.html",[26,0.045,58,0.04,59,0.045,60,0.04,335,4.347]],["title/license.html",[333,1.56,334,1.853,336,1.853]],["body/license.html",[4,0.691,9,0.415,21,0.796,23,0.297,26,0.02,31,0.165,36,0.09,46,0.664,58,0.015,59,0.015,60,0.009,77,0.576,206,0.67,208,0.67,210,1.994,227,0.67,260,1.775,291,1.781,336,4.078,337,2.614,338,2.209,339,2.209,340,0.987,341,0.987,342,0.987,343,3.763,344,4.22,345,3.901,346,2.614,347,2.937,348,0.987,349,4.38,350,3.901,351,0.987,352,0.67,353,0.987,354,0.987,355,0.987,356,3.901,357,4.22,358,3.2,359,3.901,360,1.687,361,0.987,362,2.937,363,0.987,364,0.987,365,0.987,366,2.614,367,0.987,368,3.763,369,0.987,370,2.614,371,1.687,372,1.687,373,0.987,374,2.209,375,1.687,376,1.687,377,0.987,378,0.987,379,4.567,380,2.614,381,1.687,382,3.2,383,0.987,384,1.687,385,0.987,386,0.987,387,0.987,388,0.987,389,0.987,390,0.987,391,0.987,392,0.987,393,2.209,394,0.987,395,2.209,396,1.687,397,4.22,398,0.987,399,0.987,400,3.2,401,3.763,402,2.614,403,1.687,404,1.781,405,0.987,406,1.781,407,2.581,408,0.987,409,0.987,410,0.987,411,0.987,412,0.987,413,1.687,414,0.987,415,0.987,416,0.987,417,5.077,418,2.209,419,1.687,420,0.796,421,0.987,422,3.763,423,1.687,424,0.987,425,0.987,426,1.687,427,0.987,428,4.567,429,4.618,430,0.987,431,0.987,432,0.987,433,0.987,434,0.987,435,0.987,436,0.987,437,1.687,438,1.687,439,2.209,440,0.987,441,0.987,442,0.987,443,0.987,444,0.987,445,0.987,446,2.614,447,2.937,448,0.987,449,1.687,450,2.614,451,1.687,452,0.987,453,2.937,454,1.687,455,0.987,456,0.987,457,2.209,458,0.987,459,0.987,460,0.987,461,0.987,462,1.687,463,0.987,464,0.987,465,0.987,466,2.209,467,0.987,468,0.987,469,2.209,470,0.987,471,0.987,472,0.987,473,2.614,474,3.901,475,0.987,476,0.987,477,1.687,478,3.605,479,2.209,480,1.687,481,2.614,482,1.687,483,1.687,484,1.687,485,1.687,486,2.209,487,1.687,488,2.209,489,1.687,490,1.687,491,1.687,492,1.687,493,0.987,494,1.687,495,1.687,496,0.987,497,0.987,498,2.937,499,3.42,500,2.209,501,1.687,502,0.987,503,0.987,504,1.687,505,1.687,506,0.987,507,0.987,508,2.209,509,1.687,510,0.987,511,0.987,512,0.987,513,2.209,514,0.987,515,0.987,516,0.987,517,1.687,518,1.687,519,0.987,520,0.987,521,0.987,522,0.987,523,0.987,524,0.987,525,0.987,526,1.687,527,0.987,528,0.987,529,0.987,530,0.987,531,0.987,532,0.987,533,0.987,534,2.937,535,0.987,536,2.209,537,0.987,538,0.987,539,2.209,540,0.987,541,0.987,542,0.987,543,0.987,544,3.605,545,0.987,546,0.987,547,0.987,548,0.987,549,0.987,550,2.614,551,1.687,552,2.614,553,0.987,554,0.987,555,0.987,556,0.987,557,0.987,558,0.987,559,2.209,560,0.987,561,0.987,562,1.687,563,1.687,564,0.987,565,0.987,566,0.987,567,0.987,568,1.687,569,1.36,570,0.987,571,0.987,572,2.937,573,0.987,574,0.987,575,0.987,576,0.987,577,0.987,578,0.987,579,0.987,580,0.987,581,2.209,582,2.614,583,0.987,584,0.987,585,0.987,586,0.987,587,0.987,588,0.987,589,0.987,590,0.987,591,0.987,592,0.987,593,1.687,594,0.987,595,0.987,596,1.687,597,0.987,598,0.987,599,0.987,600,2.614,601,0.987,602,0.987,603,0.987,604,0.987,605,0.987,606,0.796,607,0.987,608,2.614,609,2.209,610,2.209,611,2.209,612,1.687,613,1.687,614,2.209,615,1.687,616,1.36,617,1.687,618,1.687,619,0.987,620,0.987,621,0.987,622,0.987,623,0.987,624,0.987,625,0.987,626,0.987,627,1.687,628,0.987,629,0.987,630,0.987,631,0.987,632,2.937,633,0.987,634,0.987,635,0.987,636,0.987,637,0.987,638,0.987,639,0.987,640,0.987,641,0.987,642,2.937,643,0.987,644,0.987,645,0.987,646,0.987,647,0.987,648,0.987,649,0.987,650,0.987,651,0.987,652,0.987,653,0.987,654,0.987,655,0.987,656,0.987,657,0.987,658,0.987,659,0.987,660,2.209,661,0.987,662,0.987,663,0.987,664,0.796,665,0.987,666,1.687,667,0.987,668,0.987,669,0.987,670,0.987,671,0.987,672,0.987,673,0.987,674,0.987,675,0.987,676,0.987,677,0.987,678,0.987,679,0.987,680,0.987,681,0.987,682,1.687,683,0.987,684,0.987,685,0.987,686,1.687,687,1.687,688,0.987,689,0.987,690,0.987,691,0.987,692,0.987,693,0.987,694,0.987,695,0.987,696,0.987,697,0.987,698,0.796,699,0.987,700,0.987,701,0.987,702,0.987,703,0.987,704,0.987,705,0.987,706,0.987,707,0.987,708,0.987,709,0.987,710,0.987,711,0.987]],["title/modules.html",[63,1.453]],["body/modules.html",[26,0.044,58,0.037,59,0.044,60,0.037,62,2.375,63,1.587,74,2.066,82,2.429,262,2.375,266,2.066,420,3.858,664,3.858,712,4.785,713,5.246,714,4.785]],["title/overview.html",[715,3.003]],["body/overview.html",[1,1.794,2,1.673,26,0.049,33,1.587,36,0.301,40,1.286,48,1.392,51,1.392,53,1.587,58,0.03,59,0.038,60,0.03,61,1.286,62,3.124,63,1.286,64,1.673,65,2.237,66,2.237,67,2.237,68,1.673,69,2.657,70,2.657,71,2.657,72,2.657,73,2.657,74,2.35,75,2.854,76,2.237,77,1.923,114,1.464,204,2.237,262,3.149,263,2.657,264,2.657,265,2.657,266,2.35,294,2.237,306,2.657,352,3.143,715,2.657,716,4.204,717,3.295]],["title/routes.html",[105,2.174]],["body/routes.html",[26,0.045,58,0.04,59,0.045,60,0.04,105,2.538]],["title/miscellaneous/variables.html",[718,1.853,719,2.655]],["body/miscellaneous/variables.html",[9,0.475,13,0.669,19,0.628,25,1.24,26,0.052,27,2.3,28,2.573,29,2.573,30,2.399,41,1.72,46,0.453,58,0.031,59,0.022,60,0.014,82,1.214,98,1.214,100,1.929,108,3.375,135,1.929,216,2.671,219,1.023,238,1.978,260,1.624,294,1.023,296,1.215,298,2.399,300,1.929,301,3.643,302,1.929,303,3.173,304,1.929,313,1.215,314,1.215,315,1.215,316,1.929,317,1.929,318,2.399,333,1.023,352,1.624,404,1.215,406,1.215,407,1.929,569,1.215,606,1.929,616,2.399,698,2.399,718,1.215,719,1.215,720,2.392,721,1.506,722,1.506,723,3.934,724,1.506,725,2.975,726,1.506,727,2.392,728,2.392,729,1.506,730,1.506,731,2.392,732,1.506,733,2.392,734,2.392,735,1.506,736,2.392,737,2.392,738,1.506,739,1.506,740,1.506,741,1.506,742,1.506,743,2.975,744,4.761,745,1.506,746,1.506,747,1.506,748,1.506,749,2.392,750,1.506,751,1.506,752,1.506,753,1.506,754,1.506,755,2.392,756,1.506,757,1.506,758,1.506,759,2.392,760,1.506,761,1.506,762,2.975,763,2.975,764,2.975,765,2.975,766,2.392,767,1.506,768,1.506,769,1.506,770,1.506,771,1.506,772,1.506,773,1.506,774,1.506,775,1.506,776,1.506,777,1.506,778,1.506,779,1.506,780,1.506,781,1.506,782,1.506,783,1.506,784,1.506,785,1.506,786,1.506,787,2.392,788,1.506,789,1.506,790,1.506,791,1.506,792,1.506,793,1.506,794,1.506,795,1.506,796,1.506,797,1.506,798,1.506,799,1.506,800,2.392,801,1.506,802,1.506,803,1.506,804,1.506,805,2.392,806,1.506,807,3.388,808,1.506,809,1.506,810,1.506,811,2.392,812,1.506,813,1.506,814,1.506,815,3.388,816,1.506,817,1.506,818,1.506,819,1.506,820,2.392,821,1.506,822,1.506,823,1.506,824,2.392,825,1.506,826,1.506,827,1.506,828,1.506,829,1.506,830,1.506,831,1.506,832,2.392,833,1.506,834,1.506,835,1.506,836,2.392,837,1.506,838,1.506,839,1.506,840,1.506,841,1.506,842,1.506,843,2.975,844,1.506,845,1.506,846,1.506,847,1.506,848,1.506,849,1.506,850,1.506,851,1.506,852,1.506,853,2.392,854,2.975,855,1.506,856,1.506,857,1.506,858,1.506,859,1.506,860,1.506,861,1.506,862,2.392,863,1.506,864,2.392,865,1.506,866,1.506,867,1.506,868,1.506,869,1.506,870,1.506,871,2.392,872,1.506,873,2.392,874,1.506]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":294,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/74",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.9.0",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["10.0",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":717,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":339,"title":{},"body":{"license.html":{}}}],["200",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2004",{"_index":341,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":716,"title":{},"body":{"overview.html":{}}}],["4000",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":218,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["50",{"_index":387,"title":{},"body":{"license.html":{}}}],["6.5.2",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":354,"title":{},"body":{"license.html":{}}}],["above",{"_index":585,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":663,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":660,"title":{},"body":{"license.html":{}}}],["act",{"_index":670,"title":{},"body":{"license.html":{}}}],["acting",{"_index":364,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":160,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["activatedroutesnapshot",{"_index":226,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["acts",{"_index":640,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["add",{"_index":569,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["addendum",{"_index":571,"title":{},"body":{"license.html":{}}}],["additional",{"_index":572,"title":{},"body":{"license.html":{}}}],["additions",{"_index":448,"title":{},"body":{"license.html":{}}}],["advised",{"_index":658,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":147,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["against",{"_index":518,"title":{},"body":{"license.html":{}}}],["agree",{"_index":673,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":611,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":590,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":523,"title":{},"body":{"license.html":{}}}],["alone",{"_index":514,"title":{},"body":{"license.html":{}}}],["along",{"_index":560,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":570,"title":{},"body":{"license.html":{}}}],["and(b",{"_index":540,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":547,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":553,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":667,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":269,"title":{},"body":{"modules/ReposModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["angular/compiler",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":276,"title":{},"body":{"modules/ReposModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"dependencies.html":{}}}],["annotations",{"_index":434,"title":{},"body":{"license.html":{}}}],["apache",{"_index":337,"title":{},"body":{"license.html":{}}}],["api",{"_index":224,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["api.service.ts",{"_index":117,"title":{},"body":{"injectables/GithubApiService.html":{},"coverage.html":{}}}],["api.service.ts:15",{"_index":134,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["api.service.ts:19",{"_index":129,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["api.service.ts:9",{"_index":123,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["apiservice",{"_index":240,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.listen(port",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(subroute",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":565,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":426,"title":{},"body":{"license.html":{}}}],["applewebkit/537.36",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":609,"title":{},"body":{"license.html":{}}}],["applies",{"_index":507,"title":{},"body":{"license.html":{}}}],["apply",{"_index":682,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":88,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":691,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":625,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":74,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archives",{"_index":701,"title":{},"body":{"license.html":{}}}],["arising",{"_index":647,"title":{},"body":{"license.html":{}}}],["array",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asserted",{"_index":679,"title":{},"body":{"license.html":{}}}],["associated",{"_index":630,"title":{},"body":{"license.html":{}}}],["assume",{"_index":628,"title":{},"body":{"license.html":{}}}],["async",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":683,"title":{},"body":{"license.html":{}}}],["attached",{"_index":424,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":550,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":360,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":418,"title":{},"body":{"license.html":{}}}],["available",{"_index":420,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a{color",{"_index":255,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["based",{"_index":430,"title":{},"body":{"license.html":{}}}],["basis",{"_index":613,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":453,"title":{},"body":{"license.html":{}}}],["below",{"_index":427,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":392,"title":{},"body":{"license.html":{}}}],["bind",{"_index":444,"title":{},"body":{"license.html":{}}}],["blue",{"_index":257,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["boilerplate",{"_index":684,"title":{},"body":{"license.html":{}}}],["bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["brackets",{"_index":687,"title":{},"body":{"license.html":{}}}],["browse",{"_index":713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser.close",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser.get(browser.baseurl",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.newpage",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["carry",{"_index":542,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":236,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["cause",{"_index":376,"title":{},"body":{"license.html":{}}}],["cdref",{"_index":161,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changed",{"_index":546,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":149,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectionstrategy",{"_index":173,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":150,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectorref",{"_index":162,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["character",{"_index":646,"title":{},"body":{"license.html":{}}}],["charge",{"_index":488,"title":{},"body":{"license.html":{}}}],["choose",{"_index":661,"title":{},"body":{"license.html":{}}}],["chrome/74.0.3729.169",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chromium",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":520,"title":{},"body":{"license.html":{}}}],["claims",{"_index":509,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["closes",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_reposmodule",{"_index":263,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["cluster_reposmodule_declarations",{"_index":264,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["cluster_reposmodule_imports",{"_index":265,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["code",{"_index":404,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":258,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["combination",{"_index":515,"title":{},"body":{"license.html":{}}}],["comment",{"_index":692,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":655,"title":{},"body":{"license.html":{}}}],["common",{"_index":369,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":268,"title":{},"body":{"modules/ReposModule.html":{}}}],["communication",{"_index":457,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":412,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":704,"title":{},"body":{"license.html":{}}}],["complies",{"_index":579,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"overview.html":{}}}],["computer",{"_index":652,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":344,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":405,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":645,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":669,"title":{},"body":{"license.html":{}}}],["console",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"matchedurls",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"page",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"req",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"response",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('page",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`started",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`wrote",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(rendered_pages",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conspicuously",{"_index":470,"title":{},"body":{"license.html":{}}}],["const",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":524,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["constructor(activatedroute",{"_index":159,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["constructor(api",{"_index":221,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["constructor(http",{"_index":121,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["constructor(private",{"_index":140,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["construed",{"_index":573,"title":{},"body":{"license.html":{}}}],["contained",{"_index":556,"title":{},"body":{"license.html":{}}}],["content",{"_index":606,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":566,"title":{},"body":{"license.html":{}}}],["context",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":381,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":447,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":513,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":581,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":474,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":525,"title":{},"body":{"license.html":{}}}],["control",{"_index":366,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":367,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":414,"title":{},"body":{"license.html":{}}}],["copies",{"_index":532,"title":{},"body":{"license.html":{}}}],["copy",{"_index":539,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":357,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":521,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":290,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":519,"title":{},"body":{"license.html":{}}}],["customary",{"_index":602,"title":{},"body":{"license.html":{}}}],["damages",{"_index":642,"title":{},"body":{"license.html":{}}}],["data",{"_index":179,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["data.repo",{"_index":181,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["data.repos",{"_index":198,"title":{},"body":{"components/RepoListComponent.html":{}}}],["date",{"_index":529,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["decoration",{"_index":261,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":675,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["defining",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":371,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":348,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":637,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivative",{"_index":428,"title":{},"body":{"license.html":{}}}],["derived",{"_index":431,"title":{},"body":{"license.html":{}}}],["describing",{"_index":603,"title":{},"body":{"license.html":{}}}],["description",{"_index":206,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["designated",{"_index":472,"title":{},"body":{"license.html":{}}}],["detail",{"_index":151,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["detail.component",{"_index":282,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["detail.component.html",{"_index":153,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.scss",{"_index":152,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts",{"_index":145,"title":{},"body":{"components/RepoDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:14",{"_index":170,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:15",{"_index":163,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":164,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":168,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":166,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["determining",{"_index":624,"title":{},"body":{"license.html":{}}}],["difference",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":578,"title":{},"body":{"license.html":{}}}],["dir",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":374,"title":{},"body":{"license.html":{}}}],["direction",{"_index":377,"title":{},"body":{"license.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["directives",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["directory",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirname(file",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":607,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":467,"title":{},"body":{"license.html":{}}}],["display",{"_index":495,"title":{},"body":{"license.html":{}}}],["dist",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist_base_path",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist_output_path",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":498,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":559,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":347,"title":{},"body":{"license.html":{}}}],["document",{"_index":355,"title":{},"body":{"license.html":{}}}],["document.documentelement.outerhtml",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":291,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["don't",{"_index":690,"title":{},"body":{"license.html":{}}}],["donmahallem",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["donmahallem.github.io.source",{"_index":335,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e/src/app.po.ts",{"_index":90,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":94,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":481,"title":{},"body":{"license.html":{}}}],["easier",{"_index":699,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":432,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":435,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":454,"title":{},"body":{"license.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["element(by.css('app",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["empty",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["enclosed",{"_index":686,"title":{},"body":{"license.html":{}}}],["end",{"_index":681,"title":{},"body":{"license.html":{}}}],["entities",{"_index":365,"title":{},"body":{"license.html":{}}}],["entity",{"_index":359,"title":{},"body":{"license.html":{}}}],["environment",{"_index":238,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.status",{"_index":245,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["err.tostring",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":657,"title":{},"body":{"license.html":{}}}],["event",{"_index":633,"title":{},"body":{"license.html":{}}}],["example",{"_index":425,"title":{},"body":{"license.html":{}}}],["except",{"_index":500,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":469,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":487,"title":{},"body":{"license.html":{}}}],["executed",{"_index":591,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":631,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":394,"title":{},"body":{"license.html":{}}}],["exist",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists(dir",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explicitly",{"_index":583,"title":{},"body":{"license.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["exports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":616,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["express.js",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express.router",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express.static(dist_base_path",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":653,"title":{},"body":{"license.html":{}}}],["false",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fee",{"_index":662,"title":{},"body":{"license.html":{}}}],["fields",{"_index":685,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":385,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["filed",{"_index":530,"title":{},"body":{"license.html":{}}}],["files",{"_index":406,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["finish",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finishes",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":620,"title":{},"body":{"license.html":{}}}],["following",{"_index":536,"title":{},"body":{"license.html":{}}}],["form",{"_index":397,"title":{},"body":{"license.html":{}}}],["format",{"_index":694,"title":{},"body":{"license.html":{}}}],["free",{"_index":490,"title":{},"body":{"license.html":{}}}],["g",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g).map(s",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gecko",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated",{"_index":413,"title":{},"body":{"license.html":{}}}],["getrepo",{"_index":119,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getrepo(route.params.username",{"_index":242,"title":{},"body":{"guards/RepoResolver.html":{}}}],["getrepo(usernameorfullname",{"_index":127,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getting",{"_index":333,"title":{"index.html":{},"license.html":{}},"body":{"miscellaneous/variables.html":{}}}],["gettitletext",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserrepos",{"_index":120,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getuserrepos(environment.github.username",{"_index":286,"title":{},"body":{"guards/ReposResolver.html":{}}}],["getuserrepos(username",{"_index":133,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["github",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["githubapiservice",{"_index":33,"title":{"injectables/GithubApiService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"overview.html":{}}}],["give",{"_index":537,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":650,"title":{},"body":{"license.html":{}}}],["governing",{"_index":710,"title":{},"body":{"license.html":{}}}],["grant",{"_index":479,"title":{},"body":{"license.html":{}}}],["granted",{"_index":396,"title":{},"body":{"license.html":{}}}],["granting",{"_index":361,"title":{},"body":{"license.html":{}}}],["grants",{"_index":483,"title":{},"body":{"license.html":{}}}],["graph",{"_index":714,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":638,"title":{},"body":{"license.html":{}}}],["guard",{"_index":202,"title":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":204,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":102,"title":{},"body":{"classes/AppPage.html":{}}}],["harmless",{"_index":677,"title":{},"body":{"license.html":{}}}],["here",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hereby",{"_index":482,"title":{},"body":{"license.html":{}}}],["herein",{"_index":587,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["hold",{"_index":676,"title":{},"body":{"license.html":{}}}],["host",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["host}/${p",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":126,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["http://localhost:${port",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses",{"_index":342,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":706,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":122,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["httpclientmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":235,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["identification",{"_index":700,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":689,"title":{},"body":{"license.html":{}}}],["ii",{"_index":383,"title":{},"body":{"license.html":{}}}],["iii",{"_index":391,"title":{},"body":{"license.html":{}}}],["implements",{"_index":146,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["implied",{"_index":617,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"license.html":{}}}],["import('./modules/routing/repos/repos.module').then(m",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["improving",{"_index":468,"title":{},"body":{"license.html":{}}}],["inability",{"_index":648,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":644,"title":{},"body":{"license.html":{}}}],["include",{"_index":439,"title":{},"body":{"license.html":{}}}],["included",{"_index":423,"title":{},"body":{"license.html":{}}}],["includes",{"_index":554,"title":{},"body":{"license.html":{}}}],["including",{"_index":401,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":451,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":477,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":678,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":674,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":665,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.html\"))).tostring",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicated",{"_index":421,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":375,"title":{},"body":{"license.html":{}}}],["individual",{"_index":393,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["information",{"_index":208,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["informational",{"_index":567,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":512,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":526,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":256,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["injectable",{"_index":114,"title":{"injectables/GithubApiService.html":{}},"body":{"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":115,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["input",{"_index":253,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["inputs",{"_index":251,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["inside",{"_index":232,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["institute",{"_index":516,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":449,"title":{},"body":{"license.html":{}}}],["interceptedrequest",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interceptedrequest.continue",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interceptedrequest.url",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":306,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":491,"title":{},"body":{"license.html":{}}}],["issue",{"_index":463,"title":{},"body":{"license.html":{}}}],["item",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["item.component",{"_index":281,"title":{},"body":{"modules/ReposModule.html":{}}}],["item.component.html",{"_index":250,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["item.component.scss",{"_index":249,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["item.component.ts",{"_index":248,"title":{},"body":{"components/ReposListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":252,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["january",{"_index":340,"title":{},"body":{"license.html":{}}}],["join(__dirname",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join(dist_output_path",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["khtml",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":615,"title":{},"body":{"license.html":{}}}],["language",{"_index":709,"title":{},"body":{"license.html":{}}}],["launching",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["law",{"_index":610,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":522,"title":{},"body":{"license.html":{}}}],["legal",{"_index":362,"title":{},"body":{"license.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["liability",{"_index":632,"title":{},"body":{"license.html":{}}}],["liable",{"_index":641,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":510,"title":{},"body":{"license.html":{}}}],["license",{"_index":336,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":575,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":703,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":527,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":356,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":618,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":711,"title":{},"body":{"license.html":{}}}],["limited",{"_index":402,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":443,"title":{},"body":{"license.html":{}}}],["links",{"_index":259,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["list.component",{"_index":280,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["list.component.html",{"_index":190,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.scss",{"_index":189,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts",{"_index":188,"title":{},"body":{"components/RepoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":197,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:15",{"_index":192,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:21",{"_index":193,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:30",{"_index":196,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:35",{"_index":194,"title":{},"body":{"components/RepoListComponent.html":{}}}],["lists",{"_index":461,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":517,"title":{},"body":{"license.html":{}}}],["loadchildren",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["log",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loss",{"_index":649,"title":{},"body":{"license.html":{}}}],["losses",{"_index":656,"title":{},"body":{"license.html":{}}}],["m.reposmodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":419,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":460,"title":{},"body":{"license.html":{}}}],["main",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":503,"title":{},"body":{"license.html":{}}}],["making",{"_index":399,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":654,"title":{},"body":{"license.html":{}}}],["managed",{"_index":465,"title":{},"body":{"license.html":{}}}],["management",{"_index":378,"title":{},"body":{"license.html":{}}}],["map",{"_index":175,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["marked",{"_index":471,"title":{},"body":{"license.html":{}}}],["marks",{"_index":598,"title":{},"body":{"license.html":{}}}],["match",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match[1",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedpath",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedurls",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedurls.map((s",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":275,"title":{},"body":{"modules/ReposModule.html":{}}}],["maticonmodule",{"_index":270,"title":{},"body":{"modules/ReposModule.html":{}}}],["matlistmodule",{"_index":271,"title":{},"body":{"modules/ReposModule.html":{}}}],["matprogressspinnermodule",{"_index":272,"title":{},"body":{"modules/ReposModule.html":{}}}],["mattabsmodule",{"_index":273,"title":{},"body":{"modules/ReposModule.html":{}}}],["mattoolbarmodule",{"_index":274,"title":{},"body":{"modules/ReposModule.html":{}}}],["mean",{"_index":350,"title":{},"body":{"license.html":{}}}],["means",{"_index":372,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":409,"title":{},"body":{"license.html":{}}}],["media",{"_index":415,"title":{},"body":{"license.html":{}}}],["medium",{"_index":533,"title":{},"body":{"license.html":{}}}],["meet",{"_index":535,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":619,"title":{},"body":{"license.html":{}}}],["merely",{"_index":442,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["methods",{"_index":91,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["miscellaneous",{"_index":718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mkdir(dir",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":138,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["modifications",{"_index":400,"title":{},"body":{"license.html":{}}}],["modified",{"_index":541,"title":{},"body":{"license.html":{}}}],["modify",{"_index":568,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":574,"title":{},"body":{"license.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":388,"title":{},"body":{"license.html":{}}}],["ms",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.text",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":596,"title":{},"body":{"license.html":{}}}],["navigateto",{"_index":93,"title":{},"body":{"classes/AppPage.html":{}}}],["necessarily",{"_index":511,"title":{},"body":{"license.html":{}}}],["need",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["negligence",{"_index":636,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":639,"title":{},"body":{"license.html":{}}}],["networkidle0",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":156,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["ngmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["ngondestroy",{"_index":157,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["ngzone",{"_index":172,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["non",{"_index":486,"title":{},"body":{"license.html":{}}}],["normally",{"_index":564,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":586,"title":{},"body":{"license.html":{}}}],["notice",{"_index":422,"title":{},"body":{"license.html":{}}}],["notices",{"_index":544,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":584,"title":{},"body":{"license.html":{}}}],["nt",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":407,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["obligations",{"_index":666,"title":{},"body":{"license.html":{}}}],["observable",{"_index":132,"title":{},"body":{"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["obtain",{"_index":705,"title":{},"body":{"license.html":{}}}],["offer",{"_index":504,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":148,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["one",{"_index":557,"title":{},"body":{"license.html":{}}}],["optional",{"_index":125,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["origin",{"_index":604,"title":{},"body":{"license.html":{}}}],["original",{"_index":438,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":382,"title":{},"body":{"license.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":389,"title":{},"body":{"license.html":{}}}],["overview",{"_index":715,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":358,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":384,"title":{},"body":{"license.html":{}}}],["p",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":321,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":698,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["page.content",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.evaluate",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.goto(uri",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on(\"pageerror",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on('console",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on('request",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on('response",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.setrequestinterception(true",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.setuseragent(\"mozilla/5.0",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pages.length",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages[0",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":231,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["parameter",{"_index":212,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["parameters",{"_index":124,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["part",{"_index":552,"title":{},"body":{"license.html":{}}}],["particular",{"_index":621,"title":{},"body":{"license.html":{}}}],["party",{"_index":563,"title":{},"body":{"license.html":{}}}],["patent",{"_index":499,"title":{},"body":{"license.html":{}}}],["path",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["percent",{"_index":386,"title":{},"body":{"license.html":{}}}],["perform",{"_index":496,"title":{},"body":{"license.html":{}}}],["permission",{"_index":594,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":395,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":484,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":551,"title":{},"body":{"license.html":{}}}],["pipe(catcherror((err",{"_index":244,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["pipe(map(data",{"_index":180,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["places",{"_index":558,"title":{},"body":{"license.html":{}}}],["port",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["possibility",{"_index":659,"title":{},"body":{"license.html":{}}}],["power",{"_index":373,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":398,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":493,"title":{},"body":{"license.html":{}}}],["prerender",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prerender/.../prerender.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prerender/prerender.ts",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["printed",{"_index":697,"title":{},"body":{"license.html":{}}}],["private",{"_index":154,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["product",{"_index":599,"title":{},"body":{"license.html":{}}}],["production",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":543,"title":{},"body":{"license.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AppPage.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["protractor",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":577,"title":{},"body":{"license.html":{}}}],["provided",{"_index":210,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["providedin",{"_index":139,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["provides",{"_index":612,"title":{},"body":{"license.html":{}}}],["public",{"_index":118,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{}}}],["publicly",{"_index":494,"title":{},"body":{"license.html":{}}}],["puppeteer",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puppeteer.launch",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puppeter",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":466,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":370,"title":{},"body":{"license.html":{}}}],["readable",{"_index":555,"title":{},"body":{"license.html":{}}}],["readfile(join(dist_base_path",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reason",{"_index":680,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":601,"title":{},"body":{"license.html":{}}}],["received",{"_index":475,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":538,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":695,"title":{},"body":{"license.html":{}}}],["recursive",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":214,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["redistributing",{"_index":627,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":531,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":592,"title":{},"body":{"license.html":{}}}],["regexpmatcharray",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject(e",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remain",{"_index":440,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendered_pages",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendered_pages.length",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendering",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":688,"title":{},"body":{"license.html":{}}}],["repo",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repo.resolver",{"_index":279,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repodetailcomponent",{"_index":48,"title":{"components/RepoDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["repolistcomponent",{"_index":51,"title":{"components/RepoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["reponame",{"_index":128,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["reporesolver",{"_index":203,"title":{"guards/RepoResolver.html":{}},"body":{"guards/RepoResolver.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["repos",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repos.resolver",{"_index":278,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repos?per_page=100",{"_index":142,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["repository",{"_index":137,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"coverage.html":{}}}],["repository.name",{"_index":254,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["repository?.full_name",{"_index":187,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["reposlistitemcomponent",{"_index":53,"title":{"components/ReposListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"coverage.html":{},"overview.html":{}}}],["reposmodule",{"_index":262,"title":{"modules/ReposModule.html":{}},"body":{"modules/ReposModule.html":{},"modules.html":{},"overview.html":{}}}],["reposresolver",{"_index":277,"title":{"guards/ReposResolver.html":{}},"body":{"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["reposroutingmodule",{"_index":266,"title":{"modules/ReposRoutingModule.html":{}},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["represent",{"_index":436,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":459,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":492,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":605,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":346,"title":{},"body":{"license.html":{}}}],["req",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesting",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":600,"title":{},"body":{"license.html":{}}}],["res",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.send(index",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["resolve",{"_index":220,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["resolve(route",{"_index":225,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["resolve(s",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolves",{"_index":207,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["responds",{"_index":217,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["response",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.status",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.statustext",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.text",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.url",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsibility",{"_index":672,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":623,"title":{},"body":{"license.html":{}}}],["result",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.match(/href=\"\\/[\\/\\w\\d",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resulting",{"_index":408,"title":{},"body":{"license.html":{}}}],["results",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":548,"title":{},"body":{"license.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":95,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["revisions",{"_index":433,"title":{},"body":{"license.html":{}}}],["rights",{"_index":668,"title":{},"body":{"license.html":{}}}],["risks",{"_index":629,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["route",{"_index":211,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["route.params.reponame",{"_index":243,"title":{},"body":{"guards/RepoResolver.html":{}}}],["router",{"_index":222,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routermodule",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["routermodule.forchild(trippassagesroute",{"_index":289,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":234,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routerstatesnapshot",{"_index":228,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routes",{"_index":105,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{},"routes.html":{}}}],["routesnapshot",{"_index":233,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routing.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{}}}],["routing.module.ts",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["royalty",{"_index":489,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":136,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":176,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["s",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s.match(/\\/([\\/\\w\\d",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["safari/537.36",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":696,"title":{},"body":{"license.html":{}}}],["section",{"_index":502,"title":{},"body":{"license.html":{}}}],["sections",{"_index":351,"title":{},"body":{"license.html":{}}}],["see",{"_index":707,"title":{},"body":{"license.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["sell",{"_index":505,"title":{},"body":{"license.html":{}}}],["sent",{"_index":458,"title":{},"body":{"license.html":{}}}],["separable",{"_index":441,"title":{},"body":{"license.html":{}}}],["separate",{"_index":589,"title":{},"body":{"license.html":{}}}],["serve",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":216,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["server.close",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":597,"title":{},"body":{"license.html":{}}}],["services",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["set",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrepositories",{"_index":191,"title":{},"body":{"components/RepoListComponent.html":{}}}],["setrepositories(repos",{"_index":195,"title":{},"body":{"components/RepoListComponent.html":{}}}],["setrepository",{"_index":158,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["setrepository(repo",{"_index":167,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["settimeout(resolve",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":349,"title":{},"body":{"license.html":{}}}],["shares",{"_index":390,"title":{},"body":{"license.html":{}}}],["software",{"_index":403,"title":{},"body":{"license.html":{}}}],["sole",{"_index":671,"title":{},"body":{"license.html":{}}}],["solely",{"_index":622,"title":{},"body":{"license.html":{}}}],["something",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"license.html":{}}}],["spec\\.ts",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":643,"title":{},"body":{"license.html":{}}}],["specific",{"_index":708,"title":{},"body":{"license.html":{}}}],["src/.../environment.prod.ts",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modal",{"_index":174,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{}}}],["src/app/modal/repository.ts",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/routing/repos/repo",{"_index":144,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts",{"_index":205,"title":{},"body":{"guards/RepoResolver.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts:14",{"_index":223,"title":{},"body":{"guards/RepoResolver.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts:28",{"_index":229,"title":{},"body":{"guards/RepoResolver.html":{}}}],["src/app/modules/routing/repos/repos",{"_index":247,"title":{},"body":{"components/ReposListItemComponent.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repos.module.ts",{"_index":267,"title":{},"body":{"modules/ReposModule.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts",{"_index":283,"title":{},"body":{"guards/ReposResolver.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts:15",{"_index":284,"title":{},"body":{"guards/ReposResolver.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts:29",{"_index":285,"title":{},"body":{"guards/ReposResolver.html":{}}}],["src/app/services",{"_index":237,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["src/app/services/github",{"_index":116,"title":{},"body":{"injectables/GithubApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod",{"_index":239,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["src/environments/environment.prod.ts",{"_index":313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":334,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":227,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["stated",{"_index":501,"title":{},"body":{"license.html":{}}}],["statement",{"_index":576,"title":{},"body":{"license.html":{}}}],["statements",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stating",{"_index":545,"title":{},"body":{"license.html":{}}}],["status",{"_index":219,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["still",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":209,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["stopid",{"_index":213,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["stoppage",{"_index":651,"title":{},"body":{"license.html":{}}}],["stops",{"_index":215,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["subject",{"_index":480,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":497,"title":{},"body":{"license.html":{}}}],["submission",{"_index":580,"title":{},"body":{"license.html":{}}}],["submit",{"_index":452,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":450,"title":{},"body":{"license.html":{}}}],["subroute",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subroute.get",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscribe((repo",{"_index":182,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["subscribe((repos",{"_index":199,"title":{},"body":{"components/RepoListComponent.html":{}}}],["subscription",{"_index":171,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["subsequently",{"_index":476,"title":{},"body":{"license.html":{}}}],["such",{"_index":379,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":588,"title":{},"body":{"license.html":{}}}],["support",{"_index":664,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":712,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":693,"title":{},"body":{"license.html":{}}}],["systems",{"_index":462,"title":{},"body":{"license.html":{}}}],["table",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["tap/page",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["terminate",{"_index":528,"title":{},"body":{"license.html":{}}}],["terms",{"_index":343,"title":{},"body":{"license.html":{}}}],["test",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":260,"title":{},"body":{"components/ReposListItemComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["theory",{"_index":634,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":446,"title":{},"body":{"license.html":{}}}],["thetempvalue",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["third",{"_index":562,"title":{},"body":{"license.html":{}}}],["this.activatedroute",{"_index":178,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.api",{"_index":241,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["this.cdref.detectchanges",{"_index":185,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.http.get('https://api.github.com/repos",{"_index":143,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["this.http.get('https://api.github.com/users",{"_index":141,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["this.repos",{"_index":201,"title":{},"body":{"components/RepoListComponent.html":{}}}],["this.repository",{"_index":184,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["this.router.navigate(['stops",{"_index":246,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["this.setrepositories(repos",{"_index":200,"title":{},"body":{"components/RepoListComponent.html":{}}}],["this.setrepository(repo",{"_index":183,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["this.updatesubscription",{"_index":177,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":186,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["those",{"_index":508,"title":{},"body":{"license.html":{}}}],["through",{"_index":353,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeout(1000",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tort",{"_index":635,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":464,"title":{},"body":{"license.html":{}}}],["trade",{"_index":595,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":549,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":593,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":506,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":410,"title":{},"body":{"license.html":{}}}],["translation",{"_index":411,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["trippassagesroute",{"_index":287,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["true",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tttext",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":416,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":169,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["under",{"_index":368,"title":{},"body":{"license.html":{}}}],["union",{"_index":363,"title":{},"body":{"license.html":{}}}],["uniq(pages.concat(matchedpath",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniq(pages.concat(result.match(/href=\"\\/[\\/\\w\\d",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":582,"title":{},"body":{"license.html":{}}}],["updatesubscription",{"_index":155,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["uri",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":345,"title":{},"body":{"license.html":{}}}],["username",{"_index":135,"title":{},"body":{"injectables/GithubApiService.html":{},"miscellaneous/variables.html":{}}}],["username/:reponame",{"_index":288,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["usernameorfullname",{"_index":130,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["using",{"_index":626,"title":{},"body":{"license.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["variable",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":719,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":455,"title":{},"body":{"license.html":{}}}],["version",{"_index":338,"title":{},"body":{"license.html":{}}}],["via",{"_index":230,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["void",{"_index":165,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["waituntil",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":614,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":608,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":561,"title":{},"body":{"license.html":{}}}],["whether",{"_index":380,"title":{},"body":{"license.html":{}}}],["whole",{"_index":437,"title":{},"body":{"license.html":{}}}],["win64",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windows",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":478,"title":{},"body":{"license.html":{}}}],["without",{"_index":534,"title":{},"body":{"license.html":{}}}],["work",{"_index":417,"title":{},"body":{"license.html":{}}}],["works",{"_index":429,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":485,"title":{},"body":{"license.html":{}}}],["write",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writefile(file",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writing",{"_index":473,"title":{},"body":{"license.html":{}}}],["written",{"_index":456,"title":{},"body":{"license.html":{}}}],["x64",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":131,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["yyyy",{"_index":702,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DonMahallem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GithubApiService } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'DonMahallem';\n  constructor() {\n    // Not Empty\n  }\n}\n\n    \n\n    \n        \n\n  Repos\n  Heroes\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Repos  Heroes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGithubApiService\n\nGithubApiService\n\nAppModule -->\n\nGithubApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GithubApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GithubApiService } from './services';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    GithubApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    loadChildren: () => \"import('./modules/routing/repos/repos.module').then(m => m.ReposModule)\",\n    path: 'repos',\n  }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubApiService.html":{"url":"injectables/GithubApiService.html","title":"injectable - GithubApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GithubApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRepo\n                            \n                            \n                                    Public\n                                getUserRepos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github-api.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRepo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(usernameOrFullname: string, reponame?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/github-api.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usernameOrFullname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reponame\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserRepos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRepos(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/github-api.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Repository } from '../modal';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GithubApiService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    public getUserRepos(username: string): Observable {\n        return this.http.get('https://api.github.com/users/' + username + '/repos?per_page=100');\n    }\n\n    public getRepo(usernameOrFullname: string, reponame?: string): Observable {\n        if (reponame) {\n            return this.http.get('https://api.github.com/repos/' + usernameOrFullname + '/' + reponame);\n        } else {\n            return this.http.get('https://api.github.com/repos/' + usernameOrFullname);\n        }\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepoDetailComponent.html":{"url":"components/RepoDetailComponent.html","title":"component - RepoDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepoDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repo-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repo-detail\n            \n\n            \n                styleUrls\n                ./repo-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repo-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repository\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(activatedRoute: ActivatedRoute, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo-detail.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRepository\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRepository(repo: Repository)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repo\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnDestroy, NgZone, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Repository } from 'src/app/modal';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-repo-detail',\n    templateUrl: './repo-detail.component.html',\n    styleUrls: ['./repo-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RepoDetailComponent implements AfterViewInit, OnDestroy {\n    public repository: Repository = undefined;\n    private updateSubscription: Subscription;\n    public constructor(private activatedRoute: ActivatedRoute,\n                       private cdRef: ChangeDetectorRef) {\n\n    }\n\n    public ngAfterViewInit(): void {\n        this.updateSubscription = this.activatedRoute\n            .data\n            .pipe(map(data => data.repo))\n            .subscribe((repo: Repository) => {\n                this.setRepository(repo);\n            });\n    }\n\n    public setRepository(repo: Repository): void {\n        this.repository = repo;\n        this.cdRef.detectChanges();\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n}\n\n    \n\n    \n        Name: {{repository?.full_name}}\n    \n\n    \n                \n                    ./repo-detail.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Name: {{repository?.full_name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepoDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepoListComponent.html":{"url":"components/RepoListComponent.html","title":"component - RepoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repo-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repo-list\n            \n\n            \n                styleUrls\n                ./repo-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repos\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRepositories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(activatedRoute: ActivatedRoute, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRepositories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRepositories(repos: Repository[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repos\n                                    \n                                                Repository[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-list.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnDestroy, NgZone, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Repository } from 'src/app/modal';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-repo-list',\n    templateUrl: './repo-list.component.html',\n    styleUrls: ['./repo-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RepoListComponent implements AfterViewInit, OnDestroy {\n    public repos: Repository[] = [];\n    private updateSubscription: Subscription;\n    public constructor(private activatedRoute: ActivatedRoute,\n                       private cdRef: ChangeDetectorRef) {\n\n    }\n\n    public ngAfterViewInit(): void {\n        this.updateSubscription = this.activatedRoute\n            .data\n            .pipe(map(data => data.repos))\n            .subscribe((repos: Repository[]) => {\n                this.setRepositories(repos);\n            });\n    }\n\n    public setRepositories(repos: Repository[]): void {\n        this.repos = repos;\n        this.cdRef.detectChanges();\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./repo-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RepoResolver.html":{"url":"guards/RepoResolver.html","title":"guard - RepoResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RepoResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/routing/repos/repo.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: GithubApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        GithubApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo.resolver.ts:28\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GithubApiService } from 'src/app/services';\nimport { environment } from 'src/environments/environment.prod';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class RepoResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: GithubApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getRepo(route.params.username, route.params.reponame)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReposListItemComponent.html":{"url":"components/ReposListItemComponent.html","title":"component - ReposListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReposListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repos-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repos-list-item\n            \n\n            \n                styleUrls\n                ./repos-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repos-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        repository\n                    \n                \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repos-list-item.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Repository } from 'src/app/modal';\n\n@Component({\n    selector: 'app-repos-list-item',\n    templateUrl: './repos-list-item.component.html',\n    styleUrls: ['./repos-list-item.component.scss']\n})\nexport class ReposListItemComponent {\n    @Input()\n    public repository: Repository;\n}\n\n    \n\n    \n        \n    {{repository.name}}\n\n    \n\n    \n                \n                    ./repos-list-item.component.scss\n                \n                a{color: inherit; /* blue colors for links too */\n    text-decoration: inherit;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{repository.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReposListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReposModule.html":{"url":"modules/ReposModule.html","title":"module - ReposModule","body":"\n                   \n\n\n\n\n    Modules\n    ReposModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReposModule\n\n\n\ncluster_ReposModule_declarations\n\n\n\ncluster_ReposModule_imports\n\n\n\n\nRepoDetailComponent\n\nRepoDetailComponent\n\n\n\nReposModule\n\nReposModule\n\nReposModule -->\n\nRepoDetailComponent->ReposModule\n\n\n\n\n\nRepoListComponent\n\nRepoListComponent\n\nReposModule -->\n\nRepoListComponent->ReposModule\n\n\n\n\n\nReposListItemComponent\n\nReposListItemComponent\n\nReposModule -->\n\nReposListItemComponent->ReposModule\n\n\n\n\n\nReposRoutingModule\n\nReposRoutingModule\n\nReposModule -->\n\nReposRoutingModule->ReposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/repos/repos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RepoDetailComponent\n                        \n                        \n                            RepoListComponent\n                        \n                        \n                            ReposListItemComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReposRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatGridListModule,\n} from '@angular/material';\nimport { ReposResolver } from './repos.resolver';\nimport { RepoResolver } from './repo.resolver';\nimport { RepoListComponent } from './repo-list.component';\nimport { ReposRoutingModule } from './repos-routing.module';\nimport { ReposListItemComponent } from './repos-list-item.component';\nimport { RepoDetailComponent } from './repo-detail.component';\n@NgModule({\n    declarations: [\n        RepoListComponent,\n        ReposListItemComponent,\n        RepoDetailComponent\n    ],\n    imports: [\n        CommonModule,\n        ReposRoutingModule,\n        MatGridListModule\n    ],\n    providers: [\n        ReposResolver,\n        RepoResolver\n    ],\n})\nexport class ReposModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReposResolver.html":{"url":"guards/ReposResolver.html","title":"guard - ReposResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReposResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/routing/repos/repos.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: GithubApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repos.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        GithubApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repos.resolver.ts:29\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GithubApiService } from 'src/app/services';\nimport { environment } from 'src/environments/environment.prod';\nimport { Repository } from 'src/app/modal';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class ReposResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: GithubApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getUserRepos(environment.github.username)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReposRoutingModule.html":{"url":"modules/ReposRoutingModule.html","title":"module - ReposRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ReposRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/repos/repos-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReposResolver } from './repos.resolver';\nimport { RepoListComponent } from './repo-list.component';\nimport { RepoDetailComponent } from './repo-detail.component';\nimport { RepoResolver } from './repo.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: RepoListComponent,\n        path: '',\n        resolve: {\n            repos: ReposResolver,\n        }\n    },\n    {\n        path: ':username/:reponame',\n        component: RepoDetailComponent,\n        resolve: {\n            repo: RepoResolver,\n        },\n    }\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class ReposRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            PAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            RENDERED_PAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            timeout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modal/repository.ts\n            \n            interface\n            Repository\n            \n                0 %\n                (0/74)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo-detail.component.ts\n            \n            component\n            RepoDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo-list.component.ts\n            \n            component\n            RepoListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo.resolver.ts\n            \n            guard\n            RepoResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repos-list-item.component.ts\n            \n            component\n            ReposListItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repos.resolver.ts\n            \n            guard\n            ReposResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/github-api.service.ts\n            \n            injectable\n            GithubApiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.0\n        \n            @angular/cdk : ^8.0.0\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ^8.0.0\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndonmahallem.github.io.source\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReposModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReposRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ReposModule\n\n\n\ncluster_ReposModule_declarations\n\n\n\ncluster_ReposModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGithubApiService\n\nGithubApiService\n\nAppModule -->\n\nGithubApiService->AppModule\n\n\n\n\n\nRepoDetailComponent\n\nRepoDetailComponent\n\n\n\nReposModule\n\nReposModule\n\nReposModule -->\n\nRepoDetailComponent->ReposModule\n\n\n\n\n\nRepoListComponent\n\nRepoListComponent\n\nReposModule -->\n\nRepoListComponent->ReposModule\n\n\n\n\n\nReposListItemComponent\n\nReposListItemComponent\n\nReposModule -->\n\nReposListItemComponent->ReposModule\n\n\n\n\n\nReposRoutingModule\n\nReposRoutingModule\n\nReposModule -->\n\nReposRoutingModule->ReposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            HOST   (prerender/.../prerender.ts)\n                        \n                        \n                            main   (prerender/.../prerender.ts)\n                        \n                        \n                            PAGES   (prerender/.../prerender.ts)\n                        \n                        \n                            PORT   (prerender/.../prerender.ts)\n                        \n                        \n                            RENDERED_PAGES   (prerender/.../prerender.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            timeout   (prerender/.../prerender.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  github: {\n    username: 'donmahallem'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  github: {\n    username: 'donmahallem'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    prerender/prerender.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://localhost:${PORT}`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async () => {\n    const DIST_BASE_PATH = join(__dirname, \"..\", \"dist\", \"DonMahallem\")\n    const DIST_OUTPUT_PATH = join(__dirname, \"..\", \"dist\", \"prerender\")\n    // starting an Express.js server to serve the static files while puppeter prerender the pages\n    const app = express();\n\n    // setting the html content from the index.html file\n    const index = (await readFile(join(DIST_BASE_PATH,\n        \"index.html\"))).toString();\n    const subRoute = express.Router();\n    subRoute.get(\"*.*\", express.static(DIST_BASE_PATH, {}));\n    subRoute.get(\"*\", (req, res) => res.send(index));\n    app.use(subRoute);\n\n    // starting the express server\n    const server: Server = await (new Promise((resolve, reject) => {\n        const s = app.listen(PORT, (e) => e ? reject(e) : resolve(s));\n    }));\n\n    // tslint:disable-next-line:no-console\n    console.log(`Started server ${HOST}!`);\n\n    // launching Puppeteer\n    const browser = await puppeteer.launch();\n    await timeout(1000);\n    // tslint:disable-next-line:no-console\n    console.log(`Started browser!`);\n\n    // creating a new Tap/Page\n    const page = await browser.newPage();\n    page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\");\n    page.on(\"pageerror\", (err) => {\n        const theTempValue = err.toString();\n        console.log(\"Page error: \" + theTempValue);\n    });\n    page.on('console', msg => console.log('PAGE LOG:', msg.text()));\n\n    await page.setRequestInterception(true);\n    page.on('request', interceptedRequest => {\n        console.log(\"req uri\", interceptedRequest.url());\n        interceptedRequest.continue();\n    });\n    page.on('response', async response => {\n        if (response.status() !== 200) {\n            console.log(\"response url: \", response.url());\n            console.log(\"response code: \", response.status());\n            console.log(\"response status text: \", response.statusText());\n            const tttext = await response.text();\n            console.log(\"response text: \", tttext);\n        }\n        // do something here\n    });\n    do {\n        const p = PAGES[0];\n\n        const uri: string = `${HOST}/${p}`;\n        // requesting the first page in PAGES array\n        await page.goto(uri, { waitUntil: \"networkidle0\" });\n\n        // getting the html content after the Chromium finish rendering.\n        let result = await page.evaluate(() => document.documentElement.outerHTML);\n        result = await page.content();\n        // defining the html file name that will be created\n        let file = \"\";\n        if (p) {\n            file = join(DIST_OUTPUT_PATH, p, \"index.html\");\n        } else {\n            file = join(DIST_OUTPUT_PATH, \"index.html\");\n        }\n        const dir = dirname(file);\n\n        // test if the directory exist, if not create the directory\n        if (!(await exists(dir))) {\n            await mkdir(dir, { recursive: true } as any);\n        }\n\n        // write the rendered html file\n        await writeFile(file, result);\n\n        // tslint:disable-next-line:no-console\n        console.log(`Wrote (${RENDERED_PAGES.length + 1}) ${file}`);\n\n        // add this page to the RENDERED PAGES array\n        RENDERED_PAGES = [...RENDERED_PAGES, p];\n        //console.log(RENDERED_PAGES);\n        // set PAGES with the pages that still need to be rendered\n\n        /// uniq(PAGES.concat(result.match(/href=\"\\/[\\/\\w\\d\\-]*\"/g).map(s => s.match(/\\/([\\/\\w\\d\\-]*)/)[1]))),\n        const matchedUrls: RegExpMatchArray | null = result.match(/href=\"\\/[\\/\\w\\d\\-]*\"/g);\n        //console.log(\"MatchedUrls\", matchedUrls);\n        if (matchedUrls) {\n            const matchedPath = matchedUrls.map((s: string) => {\n                const match = s.match(/\\/([\\/\\w\\d\\-]*)/);\n                if (match) {\n                    return match[1];\n                }\n                return \"\";\n            });\n            PAGES = difference(\n                uniq(PAGES.concat(matchedPath)),\n                RENDERED_PAGES,\n            );\n        } else {\n            PAGES = difference(\n                PAGES,\n                RENDERED_PAGES,\n            );\n        }\n\n    } while (PAGES.length > 0);\n\n    // closes Chromium and finishes the express server.\n    browser.close();\n    server.close();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"\"]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RENDERED_PAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                    \n                        \n                            Default value : (ms: number): Promise =>\n    new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
