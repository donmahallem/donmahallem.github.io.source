var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.72,1,0.939]],["body/components/AppComponent.html",[0,1.163,1,1.613,2,2.009,3,0.59,4,0.502,5,1.751,6,1.751,7,1.751,8,1.751,9,0.345,10,2.42,11,1.751,12,2.932,13,2.232,14,2.686,15,2.309,16,4.426,17,2.309,18,3.956,19,0.788,20,2.686,21,3.57,22,1.967,23,1.189,24,3.956,25,0.902,26,0.051,27,2.037,28,1.751,29,1.751,30,3.191,31,0.662,32,0.59,33,1.028,34,2.42,35,0.59,36,0.274,37,2.037,38,1.727,39,3.956,40,1.171,41,2.009,42,2.009,43,1.751,44,2.747,45,1.751,46,1.189,47,1.751,48,0.902,49,1.758,50,1.751,51,0.902,52,1.751,53,1.028,54,1.333,55,1.751,56,1.751,57,1.751,58,0.027,59,0.036,60,0.027]],["title/modules/AppModule.html",[61,1.069,62,1.6]],["body/modules/AppModule.html",[1,1.85,3,0.599,4,0.511,9,0.351,13,1.355,26,0.051,31,0.845,32,0.599,33,1.729,34,2.459,35,0.599,36,0.279,40,1.19,58,0.028,59,0.037,60,0.028,61,1.19,62,3.132,63,1.19,64,1.548,65,3.029,66,3.029,67,3.029,68,1.548,69,2.459,70,2.459,71,2.459,72,2.459,73,2.459,74,2.562,75,2.715,76,2.07,77,1.78,78,3.049,79,2.334,80,3.999,81,2.459,82,1.548,83,2.334,84,2.459,85,3.049,86,3.999,87,1.78]],["title/classes/AppPage.html",[36,0.25,88,1.861]],["body/classes/AppPage.html",[3,0.723,4,0.616,9,0.423,14,2.497,19,0.966,23,1.353,26,0.051,31,0.616,35,0.723,36,0.336,42,1.867,58,0.034,59,0.041,60,0.034,82,1.867,88,3.057,89,3.678,90,2.966,91,2.001,92,5.072,93,5.072,94,3.678,95,2.001,96,3.678,97,3.678,98,2.286,99,3.678,100,3.631,101,3.678,102,3.678]],["title/modules/AppRoutingModule.html",[61,1.069,74,1.392]],["body/modules/AppRoutingModule.html",[3,0.733,4,0.624,9,0.429,26,0.051,31,0.76,32,0.733,35,0.733,36,0.341,38,1.454,58,0.034,59,0.041,60,0.034,63,1.454,68,1.892,74,2.304,79,2.175,83,2.65,103,3.726,104,3.005,105,2.857,106,3.661,107,1.454,108,2.53,109,3.726,110,3.726,111,3.726,112,3.005,113,3.726]],["title/injectables/GithubApiService.html",[33,0.939,114,1.218]],["body/injectables/GithubApiService.html",[3,0.56,4,0.477,9,0.328,14,1.934,19,0.748,22,1.266,23,1.296,25,1.296,26,0.051,27,3.534,31,0.772,32,0.56,33,1.31,35,0.56,36,0.26,46,1.296,58,0.026,59,0.035,60,0.026,87,1.663,91,1.698,95,1.698,98,2.19,114,1.698,115,2.849,116,3.717,117,2.297,118,2.199,119,3.822,120,3.822,121,2.849,122,4.61,123,2.849,124,2.19,125,2.19,126,3.822,127,3.822,128,4.808,129,2.849,130,4.313,131,2.849,132,3.264,133,3.822,134,2.849,135,3.082,136,1.266,137,1.266,138,2.849,139,2.849,140,1.446,141,2.849,142,2.849,143,3.822]],["title/components/RepoDetailComponent.html",[0,0.72,48,0.824]],["body/components/RepoDetailComponent.html",[0,0.971,1,0.734,2,1.589,3,0.421,4,0.359,5,1.251,6,1.251,7,1.251,8,1.251,9,0.247,11,1.251,12,2.638,13,2.008,15,1.827,17,1.827,19,0.563,20,2.125,22,0.952,23,1.358,25,1.223,26,0.051,28,1.251,29,1.251,31,0.724,32,0.421,35,0.421,36,0.196,38,0.836,40,0.836,41,1.589,42,1.589,43,1.251,44,2.374,45,1.251,46,1.358,47,1.251,48,1.223,49,2.233,50,1.251,51,0.644,52,1.251,53,0.734,54,0.952,55,1.251,56,1.251,57,1.251,58,0.02,59,0.029,60,0.02,91,1.391,95,1.644,107,0.836,118,2.299,124,1.589,125,1.589,136,0.952,137,2.203,140,1.088,144,3.168,145,1.728,146,1.827,147,2.983,148,2.983,149,2.525,150,2.525,151,3.131,152,3.699,153,3.131,154,2.374,155,2.983,156,3.28,157,3.28,158,3.131,159,1.728,160,3.644,161,2.983,162,3.28,163,3.131,164,2.143,165,3.644,166,2.143,167,3.131,168,2.143,169,3.131,170,2.143,171,2.983,172,1.728,173,1.728,174,1.251,175,1.728,176,1.251,177,1.728,178,1.728,179,1.728,180,1.728,181,2.143,182,2.143,183,2.143,184,2.143,185,1.728,186,1.728,187,3.131]],["title/components/RepoListComponent.html",[0,0.72,51,0.824]],["body/components/RepoListComponent.html",[0,0.974,1,0.737,2,1.594,3,0.423,4,0.36,5,1.256,6,1.256,7,1.256,8,1.256,9,0.248,11,1.256,12,2.641,13,2.011,15,1.832,17,1.832,19,0.565,20,2.131,22,0.956,23,1.36,25,1.225,26,0.051,28,1.256,29,1.256,31,0.726,32,0.423,35,0.423,36,0.197,38,1.765,40,0.839,41,1.594,42,1.594,43,1.256,44,2.379,45,1.256,46,1.225,47,1.256,48,0.647,49,2.17,50,1.256,51,1.225,52,1.256,53,0.737,54,1.647,55,1.256,56,1.256,57,1.256,58,0.02,59,0.029,60,0.02,91,1.395,95,1.647,107,0.839,118,2.301,124,1.594,125,1.594,136,0.956,137,2.076,140,1.092,144,3.172,146,1.832,147,2.989,148,2.989,149,2.532,150,2.532,154,2.379,155,2.989,156,3.286,157,3.286,159,1.735,160,3.649,161,2.989,162,3.286,165,3.649,171,2.989,172,1.735,173,1.735,174,1.256,175,1.735,176,1.256,177,1.735,178,1.735,179,1.735,180,1.735,185,1.735,186,1.735,188,1.735,189,3.707,190,3.139,191,3.139,192,3.139,193,2.151,194,2.151,195,3.139,196,2.151,197,2.151,198,2.151,199,2.151,200,2.151,201,2.151]],["title/guards/RepoResolver.html",[202,1.861,203,1.392]],["body/guards/RepoResolver.html",[3,0.476,4,0.405,9,0.278,19,0.636,22,1.759,23,1.027,25,1.027,26,0.052,31,0.81,32,0.476,33,1.474,35,0.476,36,0.221,37,2.319,46,1.027,58,0.022,59,0.031,60,0.022,87,1.412,91,1.518,95,1.075,98,1.734,107,0.944,114,1.518,118,2.016,124,1.734,125,1.734,132,2.688,136,1.075,140,1.228,146,1.412,154,1.412,176,1.412,203,1.734,204,1.643,205,1.951,206,2.688,207,3.469,208,2.92,209,3.469,210,2.319,211,3.797,212,2.755,213,3.469,214,2.755,215,2.755,216,2.319,217,2.755,218,3.193,219,2.755,220,2.92,221,1.951,222,4.052,223,2.42,224,3.193,225,2.755,226,3.469,227,2.92,228,3.469,229,2.42,230,2.755,231,3.797,232,2.755,233,2.755,234,2.755,235,2.755,236,1.951,237,1.951,238,1.412,239,1.951,240,1.951,241,1.951,242,2.42,243,2.42,244,1.951,245,1.951,246,1.951]],["title/components/ReposListItemComponent.html",[0,0.72,53,0.939]],["body/components/ReposListItemComponent.html",[0,1.139,1,0.986,2,1.954,3,0.566,4,0.482,5,1.68,6,1.68,7,1.68,8,1.68,9,0.331,11,1.68,12,2.898,13,2.206,15,2.246,17,2.246,19,0.756,23,0.865,25,0.865,26,0.05,31,0.644,32,0.566,35,0.566,36,0.263,38,2.01,40,1.123,41,1.954,42,1.954,43,1.68,44,2.702,45,1.68,46,1.157,47,1.68,48,0.865,49,1.71,50,1.68,51,0.865,52,1.68,53,1.586,54,2.342,55,2.531,56,1.68,57,1.68,58,0.026,59,0.035,60,0.026,118,1.279,137,2.206,174,1.68,247,2.613,248,2.321,249,4.335,250,3.848,251,3.848,252,2.878,253,3.848,254,3.848,255,2.878,256,3.848,257,2.878,258,2.878,259,2.878,260,2.321,261,2.878]],["title/modules/ReposModule.html",[61,1.069,262,1.6]],["body/modules/ReposModule.html",[3,0.569,4,0.484,9,0.333,26,0.051,31,0.874,32,0.569,35,0.569,36,0.264,38,1.506,40,1.129,48,1.494,49,1.716,51,1.494,53,1.704,54,1.285,58,0.026,59,0.035,60,0.026,61,1.129,63,1.129,64,1.468,65,2.951,66,1.964,67,2.622,68,1.468,75,2.622,76,1.964,77,1.688,79,2.254,83,2.254,84,2.333,203,1.96,262,3.127,263,2.333,264,2.333,265,2.333,266,2.524,267,2.893,268,3.861,269,2.333,270,2.893,271,2.893,272,2.893,273,2.893,274,2.893,275,3.861,276,2.333,277,1.96,278,2.333,279,2.333,280,2.333,281,2.893,282,2.333]],["title/guards/ReposResolver.html",[202,1.861,277,1.392]],["body/guards/ReposResolver.html",[3,0.472,4,0.402,9,0.276,19,0.63,22,1.751,23,1.02,25,1.02,26,0.052,31,0.825,32,0.472,33,1.468,35,0.472,36,0.219,37,2.305,46,1.02,58,0.022,59,0.031,60,0.022,87,1.4,91,1.509,95,1.066,98,1.724,107,0.936,114,1.509,118,2.009,124,1.724,125,1.724,132,2.675,136,1.066,137,1.066,140,1.218,146,1.4,154,1.4,174,1.4,176,1.4,204,1.629,206,2.675,207,3.455,208,2.909,209,3.455,210,2.305,211,3.786,212,2.738,213,3.455,214,2.738,215,2.738,216,2.305,217,2.738,218,3.178,219,2.738,220,2.909,221,1.935,222,4.044,224,3.178,225,2.738,226,3.455,227,2.909,228,3.455,230,2.738,231,3.786,232,2.738,233,2.738,234,2.738,235,2.738,236,1.935,237,1.935,238,1.4,239,1.935,240,1.935,241,1.935,244,1.935,245,1.935,246,1.935,277,1.724,283,1.935,284,2.399,285,2.399,286,2.399]],["title/modules/ReposRoutingModule.html",[61,1.069,266,1.392]],["body/modules/ReposRoutingModule.html",[0,1.105,3,0.649,4,0.552,9,0.38,26,0.052,31,0.863,32,0.649,35,0.649,36,0.302,38,1.287,48,1.265,49,2.059,51,1.265,58,0.03,59,0.038,60,0.03,63,1.287,68,1.675,79,1.926,83,2.456,104,2.661,105,2.456,106,3.394,107,1.287,108,2.24,112,3.394,203,2.136,220,2.857,247,2.24,266,2.136,277,2.136,278,2.661,279,2.661,280,2.661,282,2.661,287,3.3,288,3.3,289,3.3]],["title/coverage.html",[290,3.003]],["body/coverage.html",[0,1.222,1,0.999,9,0.335,10,2.351,25,0.876,26,0.051,33,0.999,36,0.266,48,0.876,51,0.876,53,0.999,54,1.295,58,0.027,59,0.035,60,0.027,88,1.979,90,2.351,114,1.295,116,2.351,117,2.351,137,1.295,144,2.635,145,2.351,188,2.351,202,2.635,203,1.48,205,2.351,238,2.266,247,1.979,248,2.351,277,1.48,283,2.351,290,2.351,291,2.351,292,2.915,293,2.915,294,3.725,295,3.881,296,4.018,297,5.282,298,2.351,299,5.282,300,2.351,301,2.351,302,2.351,303,2.351,304,2.351,305,2.915,306,2.351,307,2.915,308,3.881,309,3.881,310,3.881,311,2.915,312,2.915,313,2.351,314,2.351,315,3.13,316,2.351,317,2.351,318,2.351,319,2.915,320,2.915]],["title/dependencies.html",[64,1.671,321,2.297]],["body/dependencies.html",[26,0.051,32,0.735,58,0.034,59,0.042,60,0.034,64,1.898,81,3.668,82,2.309,107,1.459,136,1.661,269,3.015,276,3.015,322,3.739,323,5.502,324,3.739,325,3.739,326,3.739,327,3.739,328,3.739,329,3.739,330,3.739,331,3.739,332,3.739]],["title/index.html",[19,0.603,333,1.56,334,1.853]],["body/index.html",[26,0.045,58,0.04,59,0.045,60,0.04,335,4.345]],["title/license.html",[333,1.56,334,1.853,336,1.853]],["body/license.html",[4,0.688,9,0.412,21,0.785,23,0.293,26,0.02,31,0.163,36,0.089,46,0.658,58,0.015,59,0.015,60,0.009,77,0.568,206,0.661,208,0.661,210,1.979,227,0.661,260,2.09,291,1.764,336,4.07,337,2.592,338,2.188,339,2.188,340,0.974,341,0.974,342,0.974,343,3.743,344,4.202,345,3.881,346,2.592,347,2.914,348,0.974,349,4.363,350,3.881,351,0.974,352,0.661,353,0.974,354,0.974,355,0.974,356,3.881,357,4.202,358,3.178,359,3.881,360,1.668,361,0.974,362,2.914,363,0.974,364,0.974,365,0.974,366,2.592,367,0.974,368,3.743,369,0.974,370,2.592,371,1.668,372,1.668,373,0.974,374,2.188,375,1.668,376,1.668,377,0.974,378,0.974,379,4.551,380,2.592,381,1.668,382,3.178,383,0.974,384,1.668,385,0.974,386,0.974,387,0.974,388,0.974,389,0.974,390,0.974,391,0.974,392,0.974,393,2.188,394,0.974,395,2.188,396,1.668,397,4.202,398,0.974,399,0.974,400,3.178,401,3.743,402,2.592,403,1.668,404,2.188,405,0.974,406,1.764,407,2.563,408,0.974,409,0.974,410,0.974,411,0.974,412,0.974,413,1.668,414,0.974,415,0.974,416,0.974,417,5.067,418,2.188,419,1.668,420,0.785,421,0.974,422,3.743,423,1.668,424,0.974,425,0.974,426,1.668,427,0.974,428,4.551,429,4.604,430,0.974,431,0.974,432,0.974,433,0.974,434,0.974,435,0.974,436,0.974,437,1.668,438,1.668,439,2.188,440,0.974,441,0.974,442,0.974,443,0.974,444,0.974,445,0.974,446,2.592,447,2.914,448,0.974,449,1.668,450,2.592,451,1.668,452,0.974,453,2.914,454,1.668,455,0.974,456,0.974,457,2.188,458,0.974,459,0.974,460,0.974,461,0.974,462,1.668,463,0.974,464,0.974,465,0.974,466,2.188,467,0.974,468,0.974,469,2.188,470,0.974,471,0.974,472,0.974,473,2.592,474,3.881,475,0.974,476,0.974,477,1.668,478,3.584,479,2.188,480,1.668,481,2.592,482,1.668,483,1.668,484,1.668,485,1.668,486,2.188,487,1.668,488,2.188,489,1.668,490,1.668,491,1.668,492,1.668,493,0.974,494,1.668,495,1.668,496,0.974,497,0.974,498,2.914,499,3.398,500,2.188,501,1.668,502,0.974,503,0.974,504,1.668,505,1.668,506,0.974,507,0.974,508,2.188,509,1.668,510,0.974,511,0.974,512,0.974,513,2.188,514,0.974,515,0.974,516,0.974,517,1.668,518,1.668,519,0.974,520,0.974,521,0.974,522,0.974,523,0.974,524,0.974,525,0.974,526,1.668,527,0.974,528,0.974,529,0.974,530,0.974,531,0.974,532,0.974,533,0.974,534,2.914,535,0.974,536,2.188,537,0.974,538,0.974,539,2.188,540,0.974,541,0.974,542,0.974,543,0.974,544,3.584,545,0.974,546,0.974,547,0.974,548,0.974,549,0.974,550,2.592,551,1.668,552,2.592,553,0.974,554,0.974,555,0.974,556,0.974,557,0.974,558,0.974,559,2.188,560,0.974,561,0.974,562,1.668,563,1.668,564,0.974,565,0.974,566,0.974,567,0.974,568,1.668,569,1.345,570,0.974,571,0.974,572,2.914,573,0.974,574,0.974,575,0.974,576,0.974,577,0.974,578,0.974,579,0.974,580,0.974,581,2.188,582,2.592,583,0.974,584,0.974,585,0.974,586,0.974,587,0.974,588,0.974,589,0.974,590,0.974,591,0.974,592,0.974,593,1.668,594,0.974,595,0.974,596,1.668,597,0.974,598,0.974,599,0.974,600,2.592,601,0.974,602,0.974,603,0.974,604,0.974,605,0.974,606,0.785,607,0.974,608,2.592,609,2.188,610,2.188,611,2.188,612,1.668,613,1.668,614,2.188,615,1.668,616,1.345,617,1.668,618,1.668,619,0.974,620,0.974,621,0.974,622,0.974,623,0.974,624,0.974,625,0.974,626,0.974,627,1.668,628,0.974,629,0.974,630,0.974,631,0.974,632,2.914,633,0.974,634,0.974,635,0.974,636,0.974,637,0.974,638,0.974,639,0.974,640,0.974,641,0.974,642,2.914,643,0.974,644,0.974,645,0.974,646,0.974,647,0.974,648,0.974,649,0.974,650,0.974,651,0.974,652,0.974,653,0.974,654,0.974,655,0.974,656,0.974,657,0.974,658,0.974,659,0.974,660,2.188,661,0.974,662,0.974,663,0.974,664,0.785,665,0.974,666,1.668,667,0.974,668,0.974,669,0.974,670,0.974,671,0.974,672,0.974,673,0.974,674,0.974,675,0.974,676,0.974,677,0.974,678,0.974,679,0.974,680,0.974,681,0.974,682,1.668,683,0.974,684,0.974,685,0.974,686,1.668,687,1.668,688,0.974,689,0.974,690,0.974,691,0.974,692,0.974,693,0.974,694,0.974,695,0.974,696,0.974,697,0.974,698,0.785,699,0.974,700,0.974,701,0.974,702,0.974,703,0.974,704,0.974,705,0.974,706,0.974,707,0.974,708,0.974,709,0.974,710,0.974,711,0.974]],["title/modules.html",[63,1.453]],["body/modules.html",[26,0.044,58,0.037,59,0.044,60,0.037,62,2.371,63,1.585,74,2.063,82,2.427,262,2.371,266,2.063,420,3.855,664,3.855,712,4.78,713,5.243,714,4.78]],["title/overview.html",[715,3.003]],["body/overview.html",[1,1.793,2,1.665,26,0.049,33,1.584,36,0.3,40,1.28,48,1.389,51,1.389,53,1.584,58,0.03,59,0.038,60,0.03,61,1.28,62,3.122,63,1.28,64,1.665,65,2.227,66,2.227,67,2.227,68,1.665,69,2.646,70,2.646,71,2.646,72,2.646,73,2.646,74,2.346,75,2.846,76,2.227,77,1.915,114,1.458,204,2.227,262,3.147,263,2.646,264,2.646,265,2.646,266,2.346,294,2.227,306,2.646,352,3.137,715,2.646,716,4.192,717,3.281]],["title/routes.html",[105,2.174]],["body/routes.html",[26,0.045,58,0.04,59,0.045,60,0.04,105,2.536]],["title/miscellaneous/variables.html",[718,1.853,719,2.655]],["body/miscellaneous/variables.html",[9,0.487,13,0.717,19,0.663,25,1.273,26,0.052,27,2.39,28,2.63,29,2.63,30,2.51,41,1.787,46,0.485,58,0.032,59,0.023,60,0.015,82,1.282,98,1.282,100,2.037,108,3.391,135,2.037,216,2.751,238,2.055,294,1.096,296,1.302,298,2.51,300,2.037,301,3.717,302,2.037,303,3.268,304,2.037,313,1.302,314,1.302,315,1.302,316,2.037,317,2.037,318,2.51,333,1.096,352,1.715,406,1.302,407,2.037,569,1.302,606,2.037,616,2.51,698,2.51,718,1.302,719,1.302,720,2.526,721,1.614,722,1.614,723,4.052,724,1.614,725,3.112,726,1.614,727,2.526,728,2.526,729,1.614,730,1.614,731,1.614,732,1.614,733,2.526,734,2.526,735,1.614,736,2.526,737,2.526,738,1.614,739,1.614,740,1.614,741,1.614,742,1.614,743,3.112,744,4.697,745,1.614,746,1.614,747,1.614,748,1.614,749,2.526,750,1.614,751,1.614,752,1.614,753,1.614,754,1.614,755,2.526,756,1.614,757,1.614,758,1.614,759,2.526,760,1.614,761,1.614,762,3.112,763,3.112,764,3.112,765,3.112,766,2.526,767,1.614,768,1.614,769,1.614,770,1.614,771,1.614,772,1.614,773,1.614,774,1.614,775,1.614,776,2.526,777,1.614,778,1.614,779,1.614,780,1.614,781,1.614,782,1.614,783,1.614,784,1.614,785,3.52,786,1.614,787,1.614,788,1.614,789,1.614,790,1.614,791,2.526,792,1.614,793,1.614,794,1.614,795,2.526,796,1.614,797,1.614,798,1.614,799,1.614,800,1.614,801,1.614,802,1.614,803,2.526,804,1.614,805,1.614,806,1.614,807,2.526,808,1.614,809,1.614,810,1.614,811,1.614,812,1.614,813,1.614,814,3.112,815,1.614,816,1.614,817,1.614,818,1.614,819,1.614,820,1.614,821,1.614,822,1.614,823,1.614,824,2.526,825,3.112,826,1.614,827,1.614,828,1.614,829,1.614,830,1.614,831,1.614,832,1.614,833,2.526,834,1.614,835,2.526,836,1.614,837,1.614,838,1.614,839,1.614,840,1.614,841,1.614,842,2.526,843,1.614,844,2.526,845,1.614]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":294,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.9.1",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["0/74",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":352,"title":{},"body":{"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.9.0",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":717,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":339,"title":{},"body":{"license.html":{}}}],["2004",{"_index":341,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":716,"title":{},"body":{"overview.html":{}}}],["4000",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":218,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["50",{"_index":387,"title":{},"body":{"license.html":{}}}],["6.5.2",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":354,"title":{},"body":{"license.html":{}}}],["above",{"_index":585,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":663,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":660,"title":{},"body":{"license.html":{}}}],["act",{"_index":670,"title":{},"body":{"license.html":{}}}],["acting",{"_index":364,"title":{},"body":{"license.html":{}}}],["activatedroute",{"_index":160,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["activatedroutesnapshot",{"_index":226,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["acts",{"_index":640,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["add",{"_index":569,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["addendum",{"_index":571,"title":{},"body":{"license.html":{}}}],["additional",{"_index":572,"title":{},"body":{"license.html":{}}}],["additions",{"_index":448,"title":{},"body":{"license.html":{}}}],["advised",{"_index":658,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":147,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["against",{"_index":518,"title":{},"body":{"license.html":{}}}],["agree",{"_index":673,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":611,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":590,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":523,"title":{},"body":{"license.html":{}}}],["alone",{"_index":514,"title":{},"body":{"license.html":{}}}],["along",{"_index":560,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":570,"title":{},"body":{"license.html":{}}}],["and(b",{"_index":540,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":547,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":553,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":667,"title":{},"body":{"license.html":{}}}],["angular/animations",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":269,"title":{},"body":{"modules/ReposModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["angular/compiler",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":276,"title":{},"body":{"modules/ReposModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"dependencies.html":{}}}],["annotations",{"_index":434,"title":{},"body":{"license.html":{}}}],["apache",{"_index":337,"title":{},"body":{"license.html":{}}}],["api",{"_index":224,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["api.service.ts",{"_index":117,"title":{},"body":{"injectables/GithubApiService.html":{},"coverage.html":{}}}],["api.service.ts:15",{"_index":134,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["api.service.ts:19",{"_index":129,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["api.service.ts:9",{"_index":123,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["apiservice",{"_index":240,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.listen(port",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.use(subroute",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":565,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":426,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":609,"title":{},"body":{"license.html":{}}}],["applies",{"_index":507,"title":{},"body":{"license.html":{}}}],["apply",{"_index":682,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":88,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":691,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":625,"title":{},"body":{"license.html":{}}}],["approutingmodule",{"_index":74,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["archives",{"_index":701,"title":{},"body":{"license.html":{}}}],["arising",{"_index":647,"title":{},"body":{"license.html":{}}}],["array",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asserted",{"_index":679,"title":{},"body":{"license.html":{}}}],["associated",{"_index":630,"title":{},"body":{"license.html":{}}}],["assume",{"_index":628,"title":{},"body":{"license.html":{}}}],["async",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attach",{"_index":683,"title":{},"body":{"license.html":{}}}],["attached",{"_index":424,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":550,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":360,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":418,"title":{},"body":{"license.html":{}}}],["available",{"_index":420,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a{color",{"_index":255,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["based",{"_index":430,"title":{},"body":{"license.html":{}}}],["basis",{"_index":613,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":453,"title":{},"body":{"license.html":{}}}],["below",{"_index":427,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":392,"title":{},"body":{"license.html":{}}}],["bind",{"_index":444,"title":{},"body":{"license.html":{}}}],["blue",{"_index":257,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["boilerplate",{"_index":684,"title":{},"body":{"license.html":{}}}],["bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["brackets",{"_index":687,"title":{},"body":{"license.html":{}}}],["browse",{"_index":713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["browser.close",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser.get(browser.baseurl",{"_index":99,"title":{},"body":{"classes/AppPage.html":{}}}],["browser.newpage",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browsermodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["carry",{"_index":542,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":236,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["cause",{"_index":376,"title":{},"body":{"license.html":{}}}],["cdref",{"_index":161,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changed",{"_index":546,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":149,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectionstrategy",{"_index":173,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":150,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["changedetectorref",{"_index":162,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["character",{"_index":646,"title":{},"body":{"license.html":{}}}],["charge",{"_index":488,"title":{},"body":{"license.html":{}}}],["choose",{"_index":661,"title":{},"body":{"license.html":{}}}],["chromium",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":520,"title":{},"body":{"license.html":{}}}],["claims",{"_index":509,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/AppPage.html":{}}}],["closes",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_reposmodule",{"_index":263,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["cluster_reposmodule_declarations",{"_index":264,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["cluster_reposmodule_imports",{"_index":265,"title":{},"body":{"modules/ReposModule.html":{},"overview.html":{}}}],["code",{"_index":404,"title":{},"body":{"license.html":{}}}],["colors",{"_index":258,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["combination",{"_index":515,"title":{},"body":{"license.html":{}}}],["comment",{"_index":692,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":655,"title":{},"body":{"license.html":{}}}],["common",{"_index":369,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":268,"title":{},"body":{"modules/ReposModule.html":{}}}],["communication",{"_index":457,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":412,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":704,"title":{},"body":{"license.html":{}}}],["complies",{"_index":579,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"overview.html":{}}}],["computer",{"_index":652,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":344,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":405,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":645,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":669,"title":{},"body":{"license.html":{}}}],["console",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"matchedurls",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(\"page",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('page",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`started",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(`wrote",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(rendered_pages",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conspicuously",{"_index":470,"title":{},"body":{"license.html":{}}}],["const",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":524,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["constructor(activatedroute",{"_index":159,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["constructor(api",{"_index":221,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["constructor(http",{"_index":121,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["constructor(private",{"_index":140,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["construed",{"_index":573,"title":{},"body":{"license.html":{}}}],["contained",{"_index":556,"title":{},"body":{"license.html":{}}}],["content",{"_index":606,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":566,"title":{},"body":{"license.html":{}}}],["context",{"_index":316,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":381,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":447,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":513,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":581,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":474,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":525,"title":{},"body":{"license.html":{}}}],["control",{"_index":366,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":367,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":414,"title":{},"body":{"license.html":{}}}],["copies",{"_index":532,"title":{},"body":{"license.html":{}}}],["copy",{"_index":539,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":357,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":521,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":290,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":519,"title":{},"body":{"license.html":{}}}],["customary",{"_index":602,"title":{},"body":{"license.html":{}}}],["damages",{"_index":642,"title":{},"body":{"license.html":{}}}],["data",{"_index":179,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["data.repo",{"_index":181,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["data.repos",{"_index":198,"title":{},"body":{"components/RepoListComponent.html":{}}}],["date",{"_index":529,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["decoration",{"_index":261,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":675,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["defining",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":371,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":348,"title":{},"body":{"license.html":{}}}],["deliberate",{"_index":637,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":64,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivative",{"_index":428,"title":{},"body":{"license.html":{}}}],["derived",{"_index":431,"title":{},"body":{"license.html":{}}}],["describing",{"_index":603,"title":{},"body":{"license.html":{}}}],["description",{"_index":206,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["designated",{"_index":472,"title":{},"body":{"license.html":{}}}],["detail",{"_index":151,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["detail.component",{"_index":282,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["detail.component.html",{"_index":153,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.scss",{"_index":152,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts",{"_index":145,"title":{},"body":{"components/RepoDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:14",{"_index":170,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:15",{"_index":163,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":164,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":168,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":166,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["determining",{"_index":624,"title":{},"body":{"license.html":{}}}],["difference",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["different",{"_index":578,"title":{},"body":{"license.html":{}}}],["dir",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":374,"title":{},"body":{"license.html":{}}}],["direction",{"_index":377,"title":{},"body":{"license.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["directives",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["directory",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirname(file",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":607,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":467,"title":{},"body":{"license.html":{}}}],["display",{"_index":495,"title":{},"body":{"license.html":{}}}],["dist",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist_base_path",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist_output_path",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":498,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":559,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":347,"title":{},"body":{"license.html":{}}}],["document",{"_index":355,"title":{},"body":{"license.html":{}}}],["document.documentelement.outerhtml",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":291,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["don't",{"_index":690,"title":{},"body":{"license.html":{}}}],["donmahallem",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["donmahallem.github.io.source",{"_index":335,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e/src/app.po.ts",{"_index":90,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":96,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":94,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":481,"title":{},"body":{"license.html":{}}}],["easier",{"_index":699,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":432,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":435,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":454,"title":{},"body":{"license.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["element(by.css('app",{"_index":101,"title":{},"body":{"classes/AppPage.html":{}}}],["empty",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["enclosed",{"_index":686,"title":{},"body":{"license.html":{}}}],["end",{"_index":681,"title":{},"body":{"license.html":{}}}],["entities",{"_index":365,"title":{},"body":{"license.html":{}}}],["entity",{"_index":359,"title":{},"body":{"license.html":{}}}],["environment",{"_index":238,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.status",{"_index":245,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["err.tostring",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":657,"title":{},"body":{"license.html":{}}}],["event",{"_index":633,"title":{},"body":{"license.html":{}}}],["example",{"_index":425,"title":{},"body":{"license.html":{}}}],["except",{"_index":500,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":469,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":487,"title":{},"body":{"license.html":{}}}],["executed",{"_index":591,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":631,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":394,"title":{},"body":{"license.html":{}}}],["exist",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exists(dir",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["explicitly",{"_index":583,"title":{},"body":{"license.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["exports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":616,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["express.js",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express.router",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express.static(dist_base_path",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":653,"title":{},"body":{"license.html":{}}}],["false",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fee",{"_index":662,"title":{},"body":{"license.html":{}}}],["fields",{"_index":685,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":385,"title":{},"body":{"license.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["filed",{"_index":530,"title":{},"body":{"license.html":{}}}],["files",{"_index":406,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["finish",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finishes",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":620,"title":{},"body":{"license.html":{}}}],["following",{"_index":536,"title":{},"body":{"license.html":{}}}],["form",{"_index":397,"title":{},"body":{"license.html":{}}}],["format",{"_index":694,"title":{},"body":{"license.html":{}}}],["free",{"_index":490,"title":{},"body":{"license.html":{}}}],["g",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g).map(s",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generated",{"_index":413,"title":{},"body":{"license.html":{}}}],["getrepo",{"_index":119,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getrepo(route.params.username",{"_index":242,"title":{},"body":{"guards/RepoResolver.html":{}}}],["getrepo(usernameorfullname",{"_index":127,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getting",{"_index":333,"title":{"index.html":{},"license.html":{}},"body":{"miscellaneous/variables.html":{}}}],["gettitletext",{"_index":92,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserrepos",{"_index":120,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["getuserrepos(environment.github.username",{"_index":286,"title":{},"body":{"guards/ReposResolver.html":{}}}],["getuserrepos(username",{"_index":133,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["github",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["githubapiservice",{"_index":33,"title":{"injectables/GithubApiService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"overview.html":{}}}],["give",{"_index":537,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":650,"title":{},"body":{"license.html":{}}}],["governing",{"_index":710,"title":{},"body":{"license.html":{}}}],["grant",{"_index":479,"title":{},"body":{"license.html":{}}}],["granted",{"_index":396,"title":{},"body":{"license.html":{}}}],["granting",{"_index":361,"title":{},"body":{"license.html":{}}}],["grants",{"_index":483,"title":{},"body":{"license.html":{}}}],["graph",{"_index":714,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":638,"title":{},"body":{"license.html":{}}}],["guard",{"_index":202,"title":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":204,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":102,"title":{},"body":{"classes/AppPage.html":{}}}],["harmless",{"_index":677,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":482,"title":{},"body":{"license.html":{}}}],["herein",{"_index":587,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["hold",{"_index":676,"title":{},"body":{"license.html":{}}}],["host",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["host}/${p",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":126,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["http://localhost:${port",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses",{"_index":342,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":706,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":122,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["httpclientmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":235,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["identification",{"_index":700,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":689,"title":{},"body":{"license.html":{}}}],["ii",{"_index":383,"title":{},"body":{"license.html":{}}}],["iii",{"_index":391,"title":{},"body":{"license.html":{}}}],["implements",{"_index":146,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["implied",{"_index":617,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"license.html":{}}}],["import('./modules/routing/repos/repos.module').then(m",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["improving",{"_index":468,"title":{},"body":{"license.html":{}}}],["inability",{"_index":648,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":644,"title":{},"body":{"license.html":{}}}],["include",{"_index":439,"title":{},"body":{"license.html":{}}}],["included",{"_index":423,"title":{},"body":{"license.html":{}}}],["includes",{"_index":554,"title":{},"body":{"license.html":{}}}],["including",{"_index":401,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":451,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":477,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":678,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":674,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":665,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index.html\"))).tostring",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicated",{"_index":421,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":375,"title":{},"body":{"license.html":{}}}],["individual",{"_index":393,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["information",{"_index":208,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["informational",{"_index":567,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":512,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":526,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":256,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["injectable",{"_index":114,"title":{"injectables/GithubApiService.html":{}},"body":{"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":115,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["input",{"_index":253,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["inputs",{"_index":251,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["inside",{"_index":232,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["institute",{"_index":516,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":449,"title":{},"body":{"license.html":{}}}],["interface",{"_index":306,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":445,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":491,"title":{},"body":{"license.html":{}}}],["issue",{"_index":463,"title":{},"body":{"license.html":{}}}],["item",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["item.component",{"_index":281,"title":{},"body":{"modules/ReposModule.html":{}}}],["item.component.html",{"_index":250,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["item.component.scss",{"_index":249,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["item.component.ts",{"_index":248,"title":{},"body":{"components/ReposListItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:11",{"_index":252,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["january",{"_index":340,"title":{},"body":{"license.html":{}}}],["join(__dirname",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join(dist_output_path",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":615,"title":{},"body":{"license.html":{}}}],["language",{"_index":709,"title":{},"body":{"license.html":{}}}],["launching",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["law",{"_index":610,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":522,"title":{},"body":{"license.html":{}}}],["legal",{"_index":362,"title":{},"body":{"license.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["liability",{"_index":632,"title":{},"body":{"license.html":{}}}],["liable",{"_index":641,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":510,"title":{},"body":{"license.html":{}}}],["license",{"_index":336,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":575,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":703,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":527,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":356,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":618,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":711,"title":{},"body":{"license.html":{}}}],["limited",{"_index":402,"title":{},"body":{"license.html":{}}}],["line:no",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":443,"title":{},"body":{"license.html":{}}}],["links",{"_index":259,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["list",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["list.component",{"_index":280,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["list.component.html",{"_index":190,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.scss",{"_index":189,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts",{"_index":188,"title":{},"body":{"components/RepoListComponent.html":{},"coverage.html":{}}}],["list.component.ts:14",{"_index":197,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:15",{"_index":192,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:21",{"_index":193,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:30",{"_index":196,"title":{},"body":{"components/RepoListComponent.html":{}}}],["list.component.ts:35",{"_index":194,"title":{},"body":{"components/RepoListComponent.html":{}}}],["lists",{"_index":461,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":517,"title":{},"body":{"license.html":{}}}],["loadchildren",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["log",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loss",{"_index":649,"title":{},"body":{"license.html":{}}}],["losses",{"_index":656,"title":{},"body":{"license.html":{}}}],["m.reposmodule",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["made",{"_index":419,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":460,"title":{},"body":{"license.html":{}}}],["main",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":503,"title":{},"body":{"license.html":{}}}],["making",{"_index":399,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":654,"title":{},"body":{"license.html":{}}}],["managed",{"_index":465,"title":{},"body":{"license.html":{}}}],["management",{"_index":378,"title":{},"body":{"license.html":{}}}],["map",{"_index":175,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["marked",{"_index":471,"title":{},"body":{"license.html":{}}}],["marks",{"_index":598,"title":{},"body":{"license.html":{}}}],["match",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match[1",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedpath",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedurls",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matchedurls.map((s",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":275,"title":{},"body":{"modules/ReposModule.html":{}}}],["maticonmodule",{"_index":270,"title":{},"body":{"modules/ReposModule.html":{}}}],["matlistmodule",{"_index":271,"title":{},"body":{"modules/ReposModule.html":{}}}],["matprogressspinnermodule",{"_index":272,"title":{},"body":{"modules/ReposModule.html":{}}}],["mattabsmodule",{"_index":273,"title":{},"body":{"modules/ReposModule.html":{}}}],["mattoolbarmodule",{"_index":274,"title":{},"body":{"modules/ReposModule.html":{}}}],["mean",{"_index":350,"title":{},"body":{"license.html":{}}}],["means",{"_index":372,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":409,"title":{},"body":{"license.html":{}}}],["media",{"_index":415,"title":{},"body":{"license.html":{}}}],["medium",{"_index":533,"title":{},"body":{"license.html":{}}}],["meet",{"_index":535,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":619,"title":{},"body":{"license.html":{}}}],["merely",{"_index":442,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["methods",{"_index":91,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["miscellaneous",{"_index":718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mkdir(dir",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":138,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["modifications",{"_index":400,"title":{},"body":{"license.html":{}}}],["modified",{"_index":541,"title":{},"body":{"license.html":{}}}],["modify",{"_index":568,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":574,"title":{},"body":{"license.html":{}}}],["module",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["modules",{"_index":63,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":388,"title":{},"body":{"license.html":{}}}],["ms",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.text",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":596,"title":{},"body":{"license.html":{}}}],["navigateto",{"_index":93,"title":{},"body":{"classes/AppPage.html":{}}}],["necessarily",{"_index":511,"title":{},"body":{"license.html":{}}}],["need",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["negligence",{"_index":636,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":639,"title":{},"body":{"license.html":{}}}],["networkidle0",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngafterviewinit",{"_index":156,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["ngmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["ngondestroy",{"_index":157,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["ngzone",{"_index":172,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["non",{"_index":486,"title":{},"body":{"license.html":{}}}],["normally",{"_index":564,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":586,"title":{},"body":{"license.html":{}}}],["notice",{"_index":422,"title":{},"body":{"license.html":{}}}],["notices",{"_index":544,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":584,"title":{},"body":{"license.html":{}}}],["null",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":407,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["obligations",{"_index":666,"title":{},"body":{"license.html":{}}}],["observable",{"_index":132,"title":{},"body":{"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["obtain",{"_index":705,"title":{},"body":{"license.html":{}}}],["offer",{"_index":504,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":148,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["one",{"_index":557,"title":{},"body":{"license.html":{}}}],["optional",{"_index":125,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["origin",{"_index":604,"title":{},"body":{"license.html":{}}}],["original",{"_index":438,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":382,"title":{},"body":{"license.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":389,"title":{},"body":{"license.html":{}}}],["overview",{"_index":715,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":358,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":384,"title":{},"body":{"license.html":{}}}],["p",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":321,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":698,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["page.content",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.evaluate",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.goto(uri",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on(\"pageerror",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page.on('console",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pages.length",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages[0",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":231,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["parameter",{"_index":212,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["parameters",{"_index":124,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["part",{"_index":552,"title":{},"body":{"license.html":{}}}],["particular",{"_index":621,"title":{},"body":{"license.html":{}}}],["party",{"_index":563,"title":{},"body":{"license.html":{}}}],["patent",{"_index":499,"title":{},"body":{"license.html":{}}}],["path",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["percent",{"_index":386,"title":{},"body":{"license.html":{}}}],["perform",{"_index":496,"title":{},"body":{"license.html":{}}}],["permission",{"_index":594,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":395,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":484,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":551,"title":{},"body":{"license.html":{}}}],["pipe(catcherror((err",{"_index":244,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["pipe(map(data",{"_index":180,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["places",{"_index":558,"title":{},"body":{"license.html":{}}}],["port",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["possibility",{"_index":659,"title":{},"body":{"license.html":{}}}],["power",{"_index":373,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":398,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":493,"title":{},"body":{"license.html":{}}}],["prerender",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prerender/.../prerender.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prerender/prerender.ts",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["printed",{"_index":697,"title":{},"body":{"license.html":{}}}],["private",{"_index":154,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["product",{"_index":599,"title":{},"body":{"license.html":{}}}],["production",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":543,"title":{},"body":{"license.html":{}}}],["promise",{"_index":100,"title":{},"body":{"classes/AppPage.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["protractor",{"_index":97,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":577,"title":{},"body":{"license.html":{}}}],["provided",{"_index":210,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["providedin",{"_index":139,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["provides",{"_index":612,"title":{},"body":{"license.html":{}}}],["public",{"_index":118,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{}}}],["publicly",{"_index":494,"title":{},"body":{"license.html":{}}}],["puppeteer",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puppeteer.launch",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puppeter",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":466,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":370,"title":{},"body":{"license.html":{}}}],["readable",{"_index":555,"title":{},"body":{"license.html":{}}}],["readfile(join(dist_base_path",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reason",{"_index":680,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":601,"title":{},"body":{"license.html":{}}}],["received",{"_index":475,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":538,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":695,"title":{},"body":{"license.html":{}}}],["recursive",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":214,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["redistributing",{"_index":627,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":531,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":592,"title":{},"body":{"license.html":{}}}],["regexpmatcharray",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reject(e",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remain",{"_index":440,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendered_pages",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rendered_pages.length",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendering",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":688,"title":{},"body":{"license.html":{}}}],["repo",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repo.resolver",{"_index":279,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repodetailcomponent",{"_index":48,"title":{"components/RepoDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["repolistcomponent",{"_index":51,"title":{"components/RepoListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["reponame",{"_index":128,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["reporesolver",{"_index":203,"title":{"guards/RepoResolver.html":{}},"body":{"guards/RepoResolver.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["repos",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repos.resolver",{"_index":278,"title":{},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{}}}],["repos?per_page=100",{"_index":142,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["repository",{"_index":137,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"coverage.html":{}}}],["repository.name",{"_index":254,"title":{},"body":{"components/ReposListItemComponent.html":{}}}],["repository?.full_name",{"_index":187,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["reposlistitemcomponent",{"_index":53,"title":{"components/ReposListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"coverage.html":{},"overview.html":{}}}],["reposmodule",{"_index":262,"title":{"modules/ReposModule.html":{}},"body":{"modules/ReposModule.html":{},"modules.html":{},"overview.html":{}}}],["reposresolver",{"_index":277,"title":{"guards/ReposResolver.html":{}},"body":{"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["reposroutingmodule",{"_index":266,"title":{"modules/ReposRoutingModule.html":{}},"body":{"modules/ReposModule.html":{},"modules/ReposRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["represent",{"_index":436,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":459,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":492,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":605,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":346,"title":{},"body":{"license.html":{}}}],["req",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesting",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":317,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":600,"title":{},"body":{"license.html":{}}}],["res",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.send(index",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}],["resolve",{"_index":220,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{}}}],["resolve(route",{"_index":225,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["resolve(s",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolves",{"_index":207,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["responds",{"_index":217,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["responsibility",{"_index":672,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":623,"title":{},"body":{"license.html":{}}}],["result",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.match(/href=\"\\/[\\/\\w\\d",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resulting",{"_index":408,"title":{},"body":{"license.html":{}}}],["results",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":548,"title":{},"body":{"license.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":95,"title":{},"body":{"classes/AppPage.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["revisions",{"_index":433,"title":{},"body":{"license.html":{}}}],["rights",{"_index":668,"title":{},"body":{"license.html":{}}}],["risks",{"_index":629,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/GithubApiService.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["route",{"_index":211,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["route.params.reponame",{"_index":243,"title":{},"body":{"guards/RepoResolver.html":{}}}],["router",{"_index":222,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routermodule",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["routermodule.forchild(trippassagesroute",{"_index":289,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstate",{"_index":234,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routerstatesnapshot",{"_index":228,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routes",{"_index":105,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{},"routes.html":{}}}],["routesnapshot",{"_index":233,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["routing.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{}}}],["routing.module.ts",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ReposRoutingModule.html":{}}}],["royalty",{"_index":489,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":136,"title":{},"body":{"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":176,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["s",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s.match(/\\/([\\/\\w\\d",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":696,"title":{},"body":{"license.html":{}}}],["section",{"_index":502,"title":{},"body":{"license.html":{}}}],["sections",{"_index":351,"title":{},"body":{"license.html":{}}}],["see",{"_index":707,"title":{},"body":{"license.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["sell",{"_index":505,"title":{},"body":{"license.html":{}}}],["sent",{"_index":458,"title":{},"body":{"license.html":{}}}],["separable",{"_index":441,"title":{},"body":{"license.html":{}}}],["separate",{"_index":589,"title":{},"body":{"license.html":{}}}],["serve",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":216,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"miscellaneous/variables.html":{}}}],["server.close",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":597,"title":{},"body":{"license.html":{}}}],["services",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["set",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrepositories",{"_index":191,"title":{},"body":{"components/RepoListComponent.html":{}}}],["setrepositories(repos",{"_index":195,"title":{},"body":{"components/RepoListComponent.html":{}}}],["setrepository",{"_index":158,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["setrepository(repo",{"_index":167,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["settimeout(resolve",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":349,"title":{},"body":{"license.html":{}}}],["shares",{"_index":390,"title":{},"body":{"license.html":{}}}],["software",{"_index":403,"title":{},"body":{"license.html":{}}}],["sole",{"_index":671,"title":{},"body":{"license.html":{}}}],["solely",{"_index":622,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"modules/ReposModule.html":{},"guards/ReposResolver.html":{},"modules/ReposRoutingModule.html":{},"license.html":{}}}],["spec\\.ts",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":643,"title":{},"body":{"license.html":{}}}],["specific",{"_index":708,"title":{},"body":{"license.html":{}}}],["src/.../environment.prod.ts",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modal",{"_index":174,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{}}}],["src/app/modal/repository.ts",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/routing/repos/repo",{"_index":144,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts",{"_index":205,"title":{},"body":{"guards/RepoResolver.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts:14",{"_index":223,"title":{},"body":{"guards/RepoResolver.html":{}}}],["src/app/modules/routing/repos/repo.resolver.ts:28",{"_index":229,"title":{},"body":{"guards/RepoResolver.html":{}}}],["src/app/modules/routing/repos/repos",{"_index":247,"title":{},"body":{"components/ReposListItemComponent.html":{},"modules/ReposRoutingModule.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repos.module.ts",{"_index":267,"title":{},"body":{"modules/ReposModule.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts",{"_index":283,"title":{},"body":{"guards/ReposResolver.html":{},"coverage.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts:15",{"_index":284,"title":{},"body":{"guards/ReposResolver.html":{}}}],["src/app/modules/routing/repos/repos.resolver.ts:29",{"_index":285,"title":{},"body":{"guards/ReposResolver.html":{}}}],["src/app/services",{"_index":237,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["src/app/services/github",{"_index":116,"title":{},"body":{"injectables/GithubApiService.html":{},"coverage.html":{}}}],["src/environments/environment.prod",{"_index":239,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["src/environments/environment.prod.ts",{"_index":313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":315,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":334,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":227,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{},"license.html":{}}}],["stated",{"_index":501,"title":{},"body":{"license.html":{}}}],["statement",{"_index":576,"title":{},"body":{"license.html":{}}}],["statements",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stating",{"_index":545,"title":{},"body":{"license.html":{}}}],["status",{"_index":219,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["still",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stop",{"_index":209,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["stopid",{"_index":213,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["stoppage",{"_index":651,"title":{},"body":{"license.html":{}}}],["stops",{"_index":215,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["subject",{"_index":480,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":497,"title":{},"body":{"license.html":{}}}],["submission",{"_index":580,"title":{},"body":{"license.html":{}}}],["submit",{"_index":452,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":450,"title":{},"body":{"license.html":{}}}],["subroute",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subroute.get",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscribe((repo",{"_index":182,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["subscribe((repos",{"_index":199,"title":{},"body":{"components/RepoListComponent.html":{}}}],["subscription",{"_index":171,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["subsequently",{"_index":476,"title":{},"body":{"license.html":{}}}],["such",{"_index":379,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":588,"title":{},"body":{"license.html":{}}}],["support",{"_index":664,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":712,"title":{},"body":{"modules.html":{}}}],["syntax",{"_index":693,"title":{},"body":{"license.html":{}}}],["systems",{"_index":462,"title":{},"body":{"license.html":{}}}],["table",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["tap/page",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["terminate",{"_index":528,"title":{},"body":{"license.html":{}}}],["terms",{"_index":343,"title":{},"body":{"license.html":{}}}],["test",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":260,"title":{},"body":{"components/ReposListItemComponent.html":{},"license.html":{}}}],["theory",{"_index":634,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":446,"title":{},"body":{"license.html":{}}}],["thetempvalue",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["third",{"_index":562,"title":{},"body":{"license.html":{}}}],["this.activatedroute",{"_index":178,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.api",{"_index":241,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["this.cdref.detectchanges",{"_index":185,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.http.get('https://api.github.com/repos",{"_index":143,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["this.http.get('https://api.github.com/users",{"_index":141,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["this.repos",{"_index":201,"title":{},"body":{"components/RepoListComponent.html":{}}}],["this.repository",{"_index":184,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["this.router.navigate(['stops",{"_index":246,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["this.setrepositories(repos",{"_index":200,"title":{},"body":{"components/RepoListComponent.html":{}}}],["this.setrepository(repo",{"_index":183,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["this.updatesubscription",{"_index":177,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":186,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["those",{"_index":508,"title":{},"body":{"license.html":{}}}],["through",{"_index":353,"title":{},"body":{"license.html":{}}}],["timeout",{"_index":304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeout(1000",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tort",{"_index":635,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":464,"title":{},"body":{"license.html":{}}}],["trade",{"_index":595,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":549,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":593,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":506,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":410,"title":{},"body":{"license.html":{}}}],["translation",{"_index":411,"title":{},"body":{"license.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["trippassagesroute",{"_index":287,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["true",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubApiService.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"guards/RepoResolver.html":{},"components/ReposListItemComponent.html":{},"guards/ReposResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":416,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":169,"title":{},"body":{"components/RepoDetailComponent.html":{}}}],["under",{"_index":368,"title":{},"body":{"license.html":{}}}],["union",{"_index":363,"title":{},"body":{"license.html":{}}}],["uniq(pages.concat(matchedpath",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniq(pages.concat(result.match(/href=\"\\/[\\/\\w\\d",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unless",{"_index":582,"title":{},"body":{"license.html":{}}}],["updatesubscription",{"_index":155,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["uri",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":345,"title":{},"body":{"license.html":{}}}],["username",{"_index":135,"title":{},"body":{"injectables/GithubApiService.html":{},"miscellaneous/variables.html":{}}}],["username/:reponame",{"_index":288,"title":{},"body":{"modules/ReposRoutingModule.html":{}}}],["usernameorfullname",{"_index":130,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["using",{"_index":626,"title":{},"body":{"license.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{},"components/ReposListItemComponent.html":{}}}],["variable",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":719,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":455,"title":{},"body":{"license.html":{}}}],["version",{"_index":338,"title":{},"body":{"license.html":{}}}],["via",{"_index":230,"title":{},"body":{"guards/RepoResolver.html":{},"guards/ReposResolver.html":{}}}],["void",{"_index":165,"title":{},"body":{"components/RepoDetailComponent.html":{},"components/RepoListComponent.html":{}}}],["waituntil",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":614,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":608,"title":{},"body":{"license.html":{}}}],["wherever",{"_index":561,"title":{},"body":{"license.html":{}}}],["whether",{"_index":380,"title":{},"body":{"license.html":{}}}],["whole",{"_index":437,"title":{},"body":{"license.html":{}}}],["within",{"_index":478,"title":{},"body":{"license.html":{}}}],["without",{"_index":534,"title":{},"body":{"license.html":{}}}],["work",{"_index":417,"title":{},"body":{"license.html":{}}}],["works",{"_index":429,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":485,"title":{},"body":{"license.html":{}}}],["write",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writefile(file",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writing",{"_index":473,"title":{},"body":{"license.html":{}}}],["written",{"_index":456,"title":{},"body":{"license.html":{}}}],["yes",{"_index":131,"title":{},"body":{"injectables/GithubApiService.html":{}}}],["yyyy",{"_index":702,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ReposModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DonMahallem'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GithubApiService } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'DonMahallem';\n  constructor() {\n    // Not Empty\n  }\n}\n\n    \n\n    \n        \n\n  Repos\n  Heroes\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Repos  Heroes'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGithubApiService\n\nGithubApiService\n\nAppModule -->\n\nGithubApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GithubApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GithubApiService } from './services';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    GithubApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    loadChildren: () => \"import('./modules/routing/repos/repos.module').then(m => m.ReposModule)\",\n    path: 'repos',\n  }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubApiService.html":{"url":"injectables/GithubApiService.html","title":"injectable - GithubApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GithubApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/github-api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRepo\n                            \n                            \n                                    Public\n                                getUserRepos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/github-api.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRepo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(usernameOrFullname: string, reponame?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/github-api.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usernameOrFullname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reponame\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserRepos\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRepos(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/github-api.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Repository } from '../modal';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GithubApiService {\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    public getUserRepos(username: string): Observable {\n        return this.http.get('https://api.github.com/users/' + username + '/repos?per_page=100');\n    }\n\n    public getRepo(usernameOrFullname: string, reponame?: string): Observable {\n        if (reponame) {\n            return this.http.get('https://api.github.com/repos/' + usernameOrFullname + '/' + reponame);\n        } else {\n            return this.http.get('https://api.github.com/repos/' + usernameOrFullname);\n        }\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepoDetailComponent.html":{"url":"components/RepoDetailComponent.html","title":"component - RepoDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepoDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repo-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repo-detail\n            \n\n            \n                styleUrls\n                ./repo-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repo-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repository\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(activatedRoute: ActivatedRoute, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo-detail.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRepository\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRepository(repo: Repository)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repo\n                                    \n                                                Repository\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-detail.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnDestroy, NgZone, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Repository } from 'src/app/modal';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-repo-detail',\n    templateUrl: './repo-detail.component.html',\n    styleUrls: ['./repo-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RepoDetailComponent implements AfterViewInit, OnDestroy {\n    public repository: Repository = undefined;\n    private updateSubscription: Subscription;\n    public constructor(private activatedRoute: ActivatedRoute,\n                       private cdRef: ChangeDetectorRef) {\n\n    }\n\n    public ngAfterViewInit(): void {\n        this.updateSubscription = this.activatedRoute\n            .data\n            .pipe(map(data => data.repo))\n            .subscribe((repo: Repository) => {\n                this.setRepository(repo);\n            });\n    }\n\n    public setRepository(repo: Repository): void {\n        this.repository = repo;\n        this.cdRef.detectChanges();\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n}\n\n    \n\n    \n        Name: {{repository?.full_name}}\n    \n\n    \n                \n                    ./repo-detail.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Name: {{repository?.full_name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepoDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepoListComponent.html":{"url":"components/RepoListComponent.html","title":"component - RepoListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepoListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repo-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repo-list\n            \n\n            \n                styleUrls\n                ./repo-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repo-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                repos\n                            \n                            \n                                    Private\n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                setRepositories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(activatedRoute: ActivatedRoute, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo-list.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRepositories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRepositories(repos: Repository[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo-list.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    repos\n                                    \n                                                Repository[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            repos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-list.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repo-list.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnDestroy, NgZone, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Repository } from 'src/app/modal';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-repo-list',\n    templateUrl: './repo-list.component.html',\n    styleUrls: ['./repo-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RepoListComponent implements AfterViewInit, OnDestroy {\n    public repos: Repository[] = [];\n    private updateSubscription: Subscription;\n    public constructor(private activatedRoute: ActivatedRoute,\n                       private cdRef: ChangeDetectorRef) {\n\n    }\n\n    public ngAfterViewInit(): void {\n        this.updateSubscription = this.activatedRoute\n            .data\n            .pipe(map(data => data.repos))\n            .subscribe((repos: Repository[]) => {\n                this.setRepositories(repos);\n            });\n    }\n\n    public setRepositories(repos: Repository[]): void {\n        this.repos = repos;\n        this.cdRef.detectChanges();\n    }\n\n    public ngOnDestroy(): void {\n        this.updateSubscription.unsubscribe();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./repo-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepoListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RepoResolver.html":{"url":"guards/RepoResolver.html","title":"guard - RepoResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RepoResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/routing/repos/repo.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: GithubApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repo.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        GithubApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repo.resolver.ts:28\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GithubApiService } from 'src/app/services';\nimport { environment } from 'src/environments/environment.prod';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class RepoResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: GithubApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getRepo(route.params.username, route.params.reponame)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReposListItemComponent.html":{"url":"components/ReposListItemComponent.html","title":"component - ReposListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReposListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/routing/repos/repos-list-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repos-list-item\n            \n\n            \n                styleUrls\n                ./repos-list-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repos-list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        repository\n                    \n                \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/routing/repos/repos-list-item.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Repository } from 'src/app/modal';\n\n@Component({\n    selector: 'app-repos-list-item',\n    templateUrl: './repos-list-item.component.html',\n    styleUrls: ['./repos-list-item.component.scss']\n})\nexport class ReposListItemComponent {\n    @Input()\n    public repository: Repository;\n}\n\n    \n\n    \n        \n    {{repository.name}}\n\n    \n\n    \n                \n                    ./repos-list-item.component.scss\n                \n                a{color: inherit; /* blue colors for links too */\n    text-decoration: inherit;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{repository.name}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'RepoDetailComponent', 'selector': 'app-repo-detail'},{'name': 'RepoListComponent', 'selector': 'app-repo-list'},{'name': 'ReposListItemComponent', 'selector': 'app-repos-list-item'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReposListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReposModule.html":{"url":"modules/ReposModule.html","title":"module - ReposModule","body":"\n                   \n\n\n\n\n    Modules\n    ReposModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReposModule\n\n\n\ncluster_ReposModule_declarations\n\n\n\ncluster_ReposModule_imports\n\n\n\n\nRepoDetailComponent\n\nRepoDetailComponent\n\n\n\nReposModule\n\nReposModule\n\nReposModule -->\n\nRepoDetailComponent->ReposModule\n\n\n\n\n\nRepoListComponent\n\nRepoListComponent\n\nReposModule -->\n\nRepoListComponent->ReposModule\n\n\n\n\n\nReposListItemComponent\n\nReposListItemComponent\n\nReposModule -->\n\nReposListItemComponent->ReposModule\n\n\n\n\n\nReposRoutingModule\n\nReposRoutingModule\n\nReposModule -->\n\nReposRoutingModule->ReposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/repos/repos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RepoDetailComponent\n                        \n                        \n                            RepoListComponent\n                        \n                        \n                            ReposListItemComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReposRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatIconModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatGridListModule,\n} from '@angular/material';\nimport { ReposResolver } from './repos.resolver';\nimport { RepoResolver } from './repo.resolver';\nimport { RepoListComponent } from './repo-list.component';\nimport { ReposRoutingModule } from './repos-routing.module';\nimport { ReposListItemComponent } from './repos-list-item.component';\nimport { RepoDetailComponent } from './repo-detail.component';\n@NgModule({\n    declarations: [\n        RepoListComponent,\n        ReposListItemComponent,\n        RepoDetailComponent\n    ],\n    imports: [\n        CommonModule,\n        ReposRoutingModule,\n        MatGridListModule\n    ],\n    providers: [\n        ReposResolver,\n        RepoResolver\n    ],\n})\nexport class ReposModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ReposResolver.html":{"url":"guards/ReposResolver.html","title":"guard - ReposResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ReposResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/routing/repos/repos.resolver.ts\n            \n\n                \n                Description\n                \n                \n                    Resolves information for a stop provided in the route parameter 'stopId'\nRedirects to /stops if the server responds with an 404 status\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(api: GithubApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/routing/repos/repos.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        GithubApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/routing/repos/repos.resolver.ts:29\n                \n            \n\n\n            \n                \n                    Resolves the stop information via the stopId param inside the route\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouteSnapshot\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The RouterState\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { EMPTY, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { GithubApiService } from 'src/app/services';\nimport { environment } from 'src/environments/environment.prod';\nimport { Repository } from 'src/app/modal';\n\n/**\n * Resolves information for a stop provided in the route parameter 'stopId'\n * Redirects to /stops if the server responds with an 404 status\n */\n@Injectable()\nexport class ReposResolver implements Resolve {\n\n    /**\n     * Constructor\n     * @param api the {@ApiService}\n     * @param router the {@Router}\n     */\n    public constructor(private api: GithubApiService, private router: Router) { }\n\n    /**\n     * Resolves the stop information via the stopId param inside the route\n     * @param route The RouteSnapshot\n     * @param state The RouterState\n     */\n    public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n        return this.api\n            .getUserRepos(environment.github.username)\n            .pipe(catchError((err: any | HttpErrorResponse) => {\n                if (err.status === 404) {\n                    this.router.navigate(['stops']);\n                }\n                return EMPTY;\n            }));\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReposRoutingModule.html":{"url":"modules/ReposRoutingModule.html","title":"module - ReposRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ReposRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/routing/repos/repos-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReposResolver } from './repos.resolver';\nimport { RepoListComponent } from './repo-list.component';\nimport { RepoDetailComponent } from './repo-detail.component';\nimport { RepoResolver } from './repo.resolver';\n\nconst tripPassagesRoute: Routes = [\n    {\n        component: RepoListComponent,\n        path: '',\n        resolve: {\n            repos: ReposResolver,\n        }\n    },\n    {\n        path: ':username/:reponame',\n        component: RepoDetailComponent,\n        resolve: {\n            repo: RepoResolver,\n        },\n    }\n];\n\n@NgModule({\n    exports: [\n        RouterModule,\n    ],\n    imports: [\n        RouterModule.forChild(tripPassagesRoute),\n    ],\n})\nexport class ReposRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            HOST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            PAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            RENDERED_PAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prerender/prerender.ts\n            \n            variable\n            timeout\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modal/repository.ts\n            \n            interface\n            Repository\n            \n                0 %\n                (0/74)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo-detail.component.ts\n            \n            component\n            RepoDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo-list.component.ts\n            \n            component\n            RepoListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repo.resolver.ts\n            \n            guard\n            RepoResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repos-list-item.component.ts\n            \n            component\n            ReposListItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/routing/repos/repos.resolver.ts\n            \n            guard\n            ReposResolver\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/github-api.service.ts\n            \n            injectable\n            GithubApiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.0.0\n        \n            @angular/cdk : ^8.0.0\n        \n            @angular/common : ~8.0.0\n        \n            @angular/compiler : ~8.0.0\n        \n            @angular/core : ~8.0.0\n        \n            @angular/forms : ~8.0.0\n        \n            @angular/material : ^8.0.0\n        \n            @angular/platform-browser : ~8.0.0\n        \n            @angular/platform-browser-dynamic : ~8.0.0\n        \n            @angular/router : ~8.0.0\n        \n            rxjs : ~6.5.2\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndonmahallem.github.io.source\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReposModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReposRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ReposModule\n\n\n\ncluster_ReposModule_declarations\n\n\n\ncluster_ReposModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGithubApiService\n\nGithubApiService\n\nAppModule -->\n\nGithubApiService->AppModule\n\n\n\n\n\nRepoDetailComponent\n\nRepoDetailComponent\n\n\n\nReposModule\n\nReposModule\n\nReposModule -->\n\nRepoDetailComponent->ReposModule\n\n\n\n\n\nRepoListComponent\n\nRepoListComponent\n\nReposModule -->\n\nRepoListComponent->ReposModule\n\n\n\n\n\nReposListItemComponent\n\nReposListItemComponent\n\nReposModule -->\n\nReposListItemComponent->ReposModule\n\n\n\n\n\nReposRoutingModule\n\nReposRoutingModule\n\nReposModule -->\n\nReposRoutingModule->ReposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            HOST   (prerender/.../prerender.ts)\n                        \n                        \n                            main   (prerender/.../prerender.ts)\n                        \n                        \n                            PAGES   (prerender/.../prerender.ts)\n                        \n                        \n                            PORT   (prerender/.../prerender.ts)\n                        \n                        \n                            RENDERED_PAGES   (prerender/.../prerender.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            timeout   (prerender/.../prerender.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  github: {\n    username: 'DonMahallem'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  github: {\n    username: 'DonMahallem'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    prerender/prerender.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HOST\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `http://localhost:${PORT}`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async () => {\n    const DIST_BASE_PATH = join(__dirname, \"..\", \"dist\", \"DonMahallem\")\n    const DIST_OUTPUT_PATH = join(__dirname, \"..\", \"dist\", \"prerender\")\n    // starting an Express.js server to serve the static files while puppeter prerender the pages\n    const app = express();\n\n    // setting the html content from the index.html file\n    const index = (await readFile(join(DIST_BASE_PATH,\n        \"index.html\"))).toString();\n    const subRoute = express.Router();\n    subRoute.get(\"*.*\", express.static(DIST_BASE_PATH, {}));\n    subRoute.get(\"*\", (req, res) => res.send(index));\n    app.use(subRoute);\n\n    // starting the express server\n    const server: Server = await (new Promise((resolve, reject) => {\n        const s = app.listen(PORT, (e) => e ? reject(e) : resolve(s));\n    }));\n\n    // tslint:disable-next-line:no-console\n    console.log(`Started server ${HOST}!`);\n\n    // launching Puppeteer\n    const browser = await puppeteer.launch();\n    await timeout(1000);\n    // tslint:disable-next-line:no-console\n    console.log(`Started browser!`);\n\n    // creating a new Tap/Page\n    const page = await browser.newPage();\n    page.on(\"pageerror\", (err) => {\n        const theTempValue = err.toString();\n        console.log(\"Page error: \" + theTempValue);\n    });\n    page.on('console', msg => console.log('PAGE LOG:', msg.text()));\n    do {\n        const p = PAGES[0];\n\n        const uri: string = `${HOST}/${p}`;\n        // requesting the first page in PAGES array\n        await page.goto(uri, { waitUntil: \"networkidle0\" });\n\n        // getting the html content after the Chromium finish rendering.\n        let result = await page.evaluate(() => document.documentElement.outerHTML);\n        result = await page.content();\n        // defining the html file name that will be created\n        let file = \"\";\n        if (p) {\n            file = join(DIST_OUTPUT_PATH, p, \"index.html\");\n        } else {\n            file = join(DIST_OUTPUT_PATH, \"index.html\");\n        }\n        const dir = dirname(file);\n\n        // test if the directory exist, if not create the directory\n        if (!(await exists(dir))) {\n            await mkdir(dir, { recursive: true } as any);\n        }\n\n        // write the rendered html file\n        await writeFile(file, result);\n\n        // tslint:disable-next-line:no-console\n        console.log(`Wrote (${RENDERED_PAGES.length + 1}) ${file}`);\n\n        // add this page to the RENDERED PAGES array\n        RENDERED_PAGES = [...RENDERED_PAGES, p];\n        //console.log(RENDERED_PAGES);\n        // set PAGES with the pages that still need to be rendered\n\n        /// uniq(PAGES.concat(result.match(/href=\"\\/[\\/\\w\\d\\-]*\"/g).map(s => s.match(/\\/([\\/\\w\\d\\-]*)/)[1]))),\n        const matchedUrls: RegExpMatchArray | null = result.match(/href=\"\\/[\\/\\w\\d\\-]*\"/g);\n        //console.log(\"MatchedUrls\", matchedUrls);\n        if (matchedUrls) {\n            const matchedPath = matchedUrls.map((s: string) => {\n                const match = s.match(/\\/([\\/\\w\\d\\-]*)/);\n                if (match) {\n                    return match[1];\n                }\n                return \"\";\n            });\n            PAGES = difference(\n                uniq(PAGES.concat(matchedPath)),\n                RENDERED_PAGES,\n            );\n        } else {\n            PAGES = difference(\n                PAGES,\n                RENDERED_PAGES,\n            );\n        }\n\n    } while (PAGES.length > 0);\n\n    // closes Chromium and finishes the express server.\n    browser.close();\n    server.close();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"\"]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RENDERED_PAGES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                    \n                        \n                            Default value : (ms: number): Promise =>\n    new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
